{"version":3,"file":"static/js/975.c5f37235.chunk.js","mappings":"kLAGoB,qBAAXA,OAAyBC,EAAAA,gBAAkBC,EAAAA,U,qBCgCpD,MAjCA,SAAuBC,GACrB,IAAMC,EAAa,SAACD,GAElB,MAAsB,qBAAXH,QACFA,OAAOK,WAAWF,GAAOG,SAKpC,GAA8BC,EAAAA,EAAAA,UAAkBH,EAAWD,IAA3D,eAAOG,EAAP,KAAgBE,EAAhB,KAEA,SAASC,IACPD,EAAWJ,EAAWD,IAkBxB,OAfAD,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAAaL,OAAOK,WAAWF,GAQrC,OALAM,IAGAJ,EAAWK,iBAAiB,SAAUD,GAE/B,WACLJ,EAAWM,oBAAoB,SAAUF,MAG1C,CAACN,IAEGG,GChBT,MAdA,SAAwBM,EAAUC,GAChC,OAA4CN,EAAAA,EAAAA,UAAYK,GAAxD,eAAOE,EAAP,KAAuBC,EAAvB,KAUA,OARAb,EAAAA,EAAAA,YAAU,WACR,IAAMc,EAAQC,YAAW,kBAAMF,EAAkBH,KAAQC,GAAS,KAElE,OAAO,WACLK,aAAaF,MAEd,CAACJ,EAAOC,IAEJC","sources":["../node_modules/usehooks-ts/src/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.ts","../node_modules/usehooks-ts/src/useMediaQuery/useMediaQuery.ts","../node_modules/usehooks-ts/src/useDebounce/useDebounce.ts"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { useEffect, useState } from 'react'\n\nfunction useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return false\n  }\n\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\n\n  function handleChange() {\n    setMatches(getMatches(query))\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query)\n\n    // Triggered at the first client-side load and if query changes\n    handleChange()\n\n    // Listen matchMedia\n    matchMedia.addEventListener('change', handleChange)\n\n    return () => {\n      matchMedia.removeEventListener('change', handleChange)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query])\n\n  return matches\n}\n\nexport default useMediaQuery\n","import { useEffect, useState } from 'react'\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\nexport default useDebounce\n"],"names":["window","useLayoutEffect","useEffect","query","getMatches","matchMedia","matches","useState","setMatches","handleChange","addEventListener","removeEventListener","value","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout"],"sourceRoot":""}