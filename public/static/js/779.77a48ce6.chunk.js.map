{"version":3,"file":"static/js/779.77a48ce6.chunk.js","mappings":"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","sources":["components/Container/index.js","components/StackIconButton/index.js","pages/CandidateRegister/index.js","services/Candidate.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { useTheme } from '@mui/material/styles';\n\n/** @type { React.FC<import('@mui/material/Grid').GridProps> } */\nconst Container = (props) => {\n    const theme = useTheme();\n    \n    const minHeight = React.useMemo(() => {\n        const toolbar = theme.mixins.toolbar.minHeight;\n        const spacing = theme.spacing(Number(props?.spacing || 0));\n        \n        return `calc(${window.innerHeight}px - ${parseInt(spacing) + toolbar}px)`;\n        \n    }, [theme, props.spacing])\n    \n    return (\n        <Grid\n            container\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            width=\"auto\"\n            height=\"auto\"\n            boxSizing=\"border-box\"\n            minHeight={{md:minHeight}}\n            {...props}\n        />\n    )\n}\n\nexport default React.memo(Container);","import React from 'react';\nimport IconButton from '@mui/material/IconButton';\nconst StackIconButton = ({ button, ...props }) => {\n    return (\n        <div style={{ margin: '0 auto' }}>\n            {!!button ? <IconButton {...props} /> : props.children}\n        </div>\n    )\n}\n\nexport default StackIconButton;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { Button } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useDebounce } from 'usehooks-ts';\nimport Container from '../../components/Container';\nimport Candidate from '../../services/Candidate';\nimport StackIconButton from '../../components/StackIconButton';\nimport useAuth from '../../hooks/useAuth';\n\nconst CandidateRegister = () => {\n  const navigate = useNavigate()\n  const user = useSelector(state => state.user);\n\n  const { login } = useAuth({\n    onLogin: () => navigate({hash: 'menu'})\n  })\n  const [ok, setOk] = React.useState(false);\n  const [data, setData] = React.useState({\n    name: '',\n    email: user?.email || '',\n    image: null\n  });\n\n  const [nickname, setNickname] = React.useState(() => {\n    return '@' + (user.email?.substring(0, user.email?.indexOf('@')) || '');\n  });\n\n  const debounceNickname = useDebounce(nickname);\n  const handleNickname = (e) => {\n    const value = e.target.value.startsWith('@') ? e.target.value.replace(' ', '') : '@' + e.target.value.replace(' ', '');\n    setNickname(value);\n  }\n\n  const isValidForm = React.useMemo(() => {\n    return data.name.TestName() && data.email.TestMail() && nickname.length > 4 && ok\n\n  }, [data, nickname, ok])\n\n  React.useEffect(() => {\n    const checkAvailability = async () => {\n      const res = await Candidate.search({ nick: debounceNickname });\n      if (res.status === 200) {\n        setOk(false);\n      } else {\n        setOk(true);\n      }\n    }\n    if (debounceNickname) {\n      checkAvailability();\n    }\n  }, [debounceNickname]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!user?.token) {\n      return login()\n    }\n\n    const res = await Candidate.create({ ...data, nick: nickname });\n    if (res.status !== 201) {\n      setTimeout(() => window.Alert('Falha ao cadastrar'), 400)\n    } else {\n      navigate(`/candidate/${nickname}`)\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Cadastrar</title>\n      </Helmet>\n      <Container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n        minHeight=\"calc(100vh - 64px)\"\n        sx={{\n          '@media (min-device-width: 933px)': {\n            backgroundImage: 'url(/assets/background.png)',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat'\n          }\n        }}\n      >\n        <Grid item xs={10} sm={6} lg={4} p={4} boxShadow={4} bgcolor=\"background.paper\" component=\"form\">\n          <Stack mb={4}>\n            <Typography>Cadastrar novo currículo</Typography>\n            <Typography variant='caption'>Preencha todos os campos a seguir</Typography>\n          </Stack>\n          <Stack>\n            <StackIconButton\n              button={true}\n              onClick={() => window\n                .Prompt(`Preciso apenas de uma url com a imagem para o perfil`, [{ type: 'url', name: 'image', label: 'Cole um link válido' }])\n                .then(({ image }) => setData({ ...data, image }))\n                .catch(() => setData({ ...data, image: null }))\n              }\n            >\n              <Avatar\n                src={data?.image}\n                variant=\"rounded\"\n                alt='register'\n                onDropCapture={e => console.log(e)}\n                sx={{\n                  bgcolor: 'primary.main',\n                  width: 120,\n                  height: 120,\n                  boxShadow: 10,\n                  m: 'auto'\n                }}\n              />\n            </StackIconButton>\n          </Stack>\n          <TextField\n            autoFocus\n            required\n            onFocus={(e) => e.target.select()}\n            margin='normal'\n            fullWidth\n            type=\"text\"\n            value={data.name}\n            error={!data.name.TestName()}\n            onChange={(e) => setData({ ...data, name: e.target.value.Capitalize() })}\n            autoComplete='off'\n            label=\"Nome\"\n            variant='standard'\n            helperText={\"Informe o nome do candidato\"}\n          />\n          <TextField\n            required\n            margin='normal'\n            fullWidth\n            onFocus={(e) => e.target.select()}\n            type=\"text\"\n            value={nickname}\n            error={!ok || nickname.length < 5}\n            onChange={handleNickname}\n            autoComplete='off'\n            label=\"Nickname\"\n            variant='standard'\n            helperText={ok ? \"Informe um nickname, inicie com @ para um perfil público\" : \"Nickname indisponível\"}\n          />\n          <TextField\n            required\n            margin='normal'\n            fullWidth\n            type=\"email\"\n            value={data.email}\n            error={!data.email.TestMail()}\n            onChange={(e) => setData({ ...data, email: e.target.value })}\n            autoComplete='off'\n            label=\"Email\"\n            variant='standard'\n            helperText={\"Informe o email do candidato\"}\n          />\n\n          <Stack mt={4} width=\"auto\">\n            <Button fullWidth disabled={!isValidForm} onClick={handleSubmit} variant='outlined'>Criar</Button>\n          </Stack>\n        </Grid>\n      </Container>\n    </>\n  )\n}\n\nexport default CandidateRegister;","// import { Request } from \"./Request\";\nimport Request from \"fx-request/lib/functions/HttpRequest\";\nimport SerializeQueryString from \"fx-request/lib/functions/SerializeQueryString\";\n\n/**\n * @typedef {import(\"@types/web/models\").Candidate } Candidate\n * @typedef {import(\"@types/web/models\").Job } Job\n * @typedef {import(\"@types/web/models\").Education } Education\n * @typedef {import(\"@types/web/models\").Skill } Skill\n * @typedef {import(\"@types/web/models\").Language } Language\n */\n\nconst Candidate = {\n    /**\n     * @param {Partial<Candidate>} data \n     */\n    search: (data) => Request('get', '/api/candidate?' + SerializeQueryString(data)),\n    get: () => Request('get', '/api/candidates'),\n    /**\n     * @param {RequiredKeys<Candidate>} data \n     */\n    create: (data) => Request('post', '/api/candidates', data),\n    /**\n    * @param {RequiredKeys<Candidate>} data \n    */\n    delete: (data) => Request('delete', '/api/candidates/' + data.uuid),\n    /**\n     * @param {string} uuid\n     * @param {RequiredKeys<Candidate>} data \n     */\n    update: (uuid, data) => Request('put', `/api/candidates/${uuid}`, data),\n    /** \n     * @param {Partial<Skill>} lib\n     */\n    libs: (lib) => ({\n        connect: (/**@type {string}*/ tag) => Request('post', `/api/skills/${encodeURIComponent(tag)}`, lib),\n        disconnect: () => Request('delete', `/api/skills/${encodeURIComponent(lib.tag)}`),\n    }),\n    /**\n     * @param {Partial<Job>} job\n     */\n    jobs: (job = {}) => ({\n        /**\n         * @param {RequiredKeys<Job>} data \n         */\n        create: (data) => Request('post', `/api/jobs/`, data),\n        /**\n         * @param {Partial<Job>} data \n         */\n        update: (data) => Request('put', `/api/jobs/${job.uuid}`, data),\n        delete: () => Request('delete', `/api/jobs/${job.uuid}`),\n        /** \n         * @param {Partial<Skill>} skill\n         */\n        skills: (skill) => ({\n            delete: () => Request('delete', `/api/skills/${encodeURIComponent(skill.tag)}`, { company: job.uuid }),\n            connect: (connect) => Request(connect ? 'post' : 'delete', `/api/skills`, { ...skill, company: job.uuid }),\n        })\n    }),\n    /**\n     * @param {Partial<Education>} education\n     */\n    educations: (education = {}) => ({\n        /**\n         * @param {RequiredKeys<Education>} data \n         */\n        create: (data) => Request('post', `/api/educations/`, data),\n        /**\n         * @param {Partial<Education>} data \n         */\n        update: (data) => Request('put', `/api/educations/${education.uuid}`, data),\n        delete: () => Request('delete', `/api/educations/${education.uuid}`),\n    }),\n    /**\n     * @param {Partial<Language>} language\n     */\n    languages: (language = {}) => ({\n        /**\n         * @param {RequiredKeys<Language>} data \n         */\n        create: (data) => Request('post', `/api/languages/`, data),\n        /**\n         * @param {Partial<Language>} data \n         */\n        update: (data) => Request('put', `/api/languages/${language.uuid}`, data),\n        delete: () => Request('delete', `/api/languages/${language.uuid}`),\n    })\n}\n\nexport default Candidate;"],"names":["Container","props","theme","useTheme","minHeight","React","toolbar","mixins","spacing","Number","window","innerHeight","parseInt","container","alignContent","justifyContent","width","height","boxSizing","md","button","style","margin","children","navigate","useNavigate","user","useSelector","state","login","useAuth","onLogin","hash","ok","setOk","name","email","image","data","setData","substring","indexOf","nickname","setNickname","debounceNickname","useDebounce","isValidForm","TestName","TestMail","length","checkAvailability","Candidate","nick","status","handleSubmit","e","preventDefault","token","setTimeout","Alert","alignItems","sx","backgroundImage","backgroundSize","backgroundRepeat","item","xs","sm","lg","p","boxShadow","bgcolor","component","mb","variant","onClick","Prompt","type","label","then","catch","src","alt","onDropCapture","console","log","m","autoFocus","required","onFocus","target","select","fullWidth","value","error","onChange","Capitalize","autoComplete","helperText","startsWith","replace","mt","disabled","search","Request","SerializeQueryString","get","create","delete","uuid","update","libs","lib","connect","tag","encodeURIComponent","disconnect","jobs","job","skills","skill","company","educations","education","languages","language"],"sourceRoot":""}