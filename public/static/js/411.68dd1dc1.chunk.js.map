{"version":3,"file":"static/js/411.68dd1dc1.chunk.js","mappings":"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","sources":["components/Container/index.js","components/CardPanel/index.js","components/CircularProgressWithLabel/index.js","components/Div/index.js","pages/Candidate/perfil.js","services/Skill.js","pages/Candidate/skills.js","components/AutocompleteAsync/index.js","components/Subheader/index.js","components/Timeline/index.js","pages/Candidate/jobs.js","pages/Candidate/Education.js","pages/Candidate/language.js","pages/Candidate/skeleton.js","pages/Candidate/notfound.js","pages/Candidate/index.js","services/Candidate.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { useTheme } from '@mui/material/styles';\n\n/** @type { React.FC<import('@mui/material/Grid').GridProps> } */\nconst Container = (props) => {\n    const theme = useTheme();\n    \n    const minHeight = React.useMemo(() => {\n        const toolbar = theme.mixins.toolbar.minHeight;\n        const spacing = theme.spacing(Number(props?.spacing || 0));\n        \n        return `calc(${window.innerHeight}px - ${parseInt(spacing) + toolbar}px)`;\n        \n    }, [theme, props.spacing])\n    \n    return (\n        <Grid\n            container\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            width=\"auto\"\n            height=\"auto\"\n            boxSizing=\"border-box\"\n            minHeight={{md:minHeight}}\n            {...props}\n        />\n    )\n}\n\nexport default React.memo(Container);","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActionArea from '@mui/material/CardActionArea';\n\n/**\n * @typedef {{\n *  button?: boolean\n *  actionArea?: boolean\n *  variant?: \"elevation\" | \"outlined\"\n *  fill?: boolean\n *  padding?: number\n *  sx: import('@mui/material').SxProps\n * }} Props\n * \n * @type {React.FC<\n *  Partial<import('@mui/material/CardHeader').CardHeaderProps> & \n *  Partial<import('@mui/material/CardActionArea').CardActionAreaProps> \n *  & Props\n * >} \n */\n\nconst CardPanel = ({ variant = 'elevation', button, actionArea, children, padding, fill = true, sx, ...props }) => {\n    return (\n        <Card\n            className=\"CardPanel\"\n            variant={variant}\n            sx={{\n                p: padding,\n                display: 'block',\n                width: '100%',\n                minHeight: fill && {\n                    md: 'calc(100vh - 84px)'\n                },\n                ...sx\n           }}\n        >\n            {button\n                ? <CardActionArea><CardHeader sx={{ p: 1, fontSize: '80%' }} {...props} /></CardActionArea>\n                : props?.title && <CardHeader sx={{ p: 1, fontSize: '80%' }} {...props} />}\n\n            {actionArea ? <CardActionArea {...props}>{children}</CardActionArea> : children}\n        </Card>\n    )\n}\n\nexport default CardPanel;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function CircularProgressWithLabel(props) {\n  return (\n    <Box sx={{ placeContent: \"center\", width: \"100%\", position: 'relative', boxSizing: 'border-box', display: 'inline-flex' }}>\n      <CircularProgress\n        {...props}\n        variant=\"determinate\"\n        value={props.value > 99 ? 99 : props.value}\n        size={60}\n      // sx={{ strokeLinecap: 'round' }} \n      />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Box textAlign={'center'}>\n          <Typography variant=\"subtitle2\" component=\"div\" fontSize={11} color=\"text.primary\">\n            {props.children}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport Box from '@mui/material/Box';\n\n/** @type { React.FC<import('@mui/material/Box').BoxProps & { show?: Boolean }> } */\nconst Div = ({ show = true, ...props }) => {\n\n    if (show !== true) {\n        return null\n    }\n\n    return (\n        <Box\n            display={\"flex\"}\n            alignContent={\"center\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            {...props}\n        />\n    )\n}\n\nexport default Div;","import React from 'react';\nimport Candidate from '../../services/Candidate';\n\nimport { useNavigate } from 'react-router-dom';\nimport { StyledListItem } from '../../components';\n\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport CardPanel from '../../components/CardPanel';\nimport { CardMembershipIcon, AccountCircleIcon, EmailIcon, AddCircleIcon, DeleteIcon, PlaceIcon, CalendarMonthIcon } from '../../components/Icons';\nimport { useMediaQuery } from 'usehooks-ts';\n\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\nconst Perfil = ({ candidate, permission }) => {\n    const navigate = useNavigate();\n    const print = useMediaQuery('print');\n\n    const update = React.useCallback((\n        /** @type {string} */ title,\n        /** @type {any}    */ input\n    ) => {\n        return window\n            .Prompt(title, [{ type: 'text', ...input }])\n            .then(data => Candidate\n                .update(candidate.uuid, data)\n                .then((res) => {\n                    switch (res.status) {\n                        case 200:\n                            if (input.name === 'nick') {\n                                navigate(`/candidate/${data.nick}`);\n                            }\n                            break;\n                        default:\n                            setTimeout(() => window.Alert(\"Nickname indisponível ou inválido\"), 400)\n                            break;\n                    }\n                })\n            )\n            .catch(() => console.log('ok'))\n\n    }, [candidate, navigate]);\n\n    const deleteCandidate = React.useCallback(() => {\n        window.Confirm(`Deseja excluir permanentemente o candidato ${candidate.nick}`)\n            .then(async () => {\n                const res = await Candidate.delete(candidate);\n                if (res.status === 200) {\n                    navigate('/home')\n                }\n            })\n            .catch(() => console.log('No delete'))\n    }, [candidate, navigate])\n\n\n    const candidateLinks = React.useMemo(() => {\n        try {\n            if (!candidate.links) {\n                return []\n            }\n\n            return Object.keys(candidate.links).map(e => ({\n                icon: candidate.links[e],\n                url: e,\n                host: new URL(e).host,\n                title: new URL(e).pathname\n            }))\n\n        } catch (error) {\n            return []\n\n        }\n    }, [candidate.links])\n\n    return (\n        <>\n            <div className='print-flex-columns'>\n                <Box\n                    height={200}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    position=\"relative\"\n                    overflow=\"hidden\"\n                    sx={{\n                        '@media print': {\n                            width: 400,\n                            height: 300\n                        },\n                        '@media (max-device-width: 933px)': {\n                            backgroundImage: 'url(/assets/background.png)',\n                            backgroundSize: '100%',\n                            backgroundRepeat: 'no-repeat'\n                        }\n                    }}\n                >\n                    <Box\n                        sx={{\n                            textAlign: 'center'\n                        }}>\n                        <IconButton\n                            disabled={!permission}\n                            onClick={() => permission && update('Atualizar imagem de perfil', {\n                                label: 'Cole uma url valida',\n                                name: 'image',\n                                type: 'url'\n                            })}>\n                            <Avatar\n                                variant=\"rounded\"\n                                alt={candidate.name}\n                                src={candidate.image}\n                                sx={{\n                                    width: 106,\n                                    height: 106,\n                                    '@media print': {\n                                        width: 150,\n                                        height: 150,\n                                    }\n                                }}\n                            />\n                        </IconButton>\n                        <Typography p={2} textAlign=\"center\" color=\"WindowText\" fontWeight={666}>\n                            {permission &&\n                                <IconButton className=\"noprint\" onClick={deleteCandidate} color=\"default\" aria-label=\"delete-candidate\">\n                                    <Tooltip title=\"deletar cadastro\">\n                                        <DeleteIcon />\n                                    </Tooltip>\n                                </IconButton>\n                            }\n                            {candidate.name}\n                        </Typography>\n                    </Box>\n                </Box>\n                <List dense>\n                    <ListSubheader sx={{ mt: 2, mb: 2 }}><Typography>Perfil</Typography></ListSubheader>\n                    {permission && <>\n                        <StyledListItem\n                            className=\"noprint\"\n                            icon={!print && <Avatar variant='rounded'><CardMembershipIcon /></Avatar>}\n                            onClick={() => permission && update('Atualizar Nickname', {\n                                label: 'Informe o novo apelido, inicie com @',\n                                name: 'nick',\n                                initialValue: candidate.nick\n                            })}\n                            button={permission}\n                            primary={candidate.nick}\n                        />\n                        <StyledListItem\n                            className=\"noprint\"\n                            icon={!print && <Avatar variant='rounded'><AccountCircleIcon /></Avatar>}\n                            onClick={() => permission && update('Atualizar Nome', {\n                                label: 'Informe o novo Nome',\n                                name: 'name',\n                                initialValue: candidate.name\n                            })}\n                            button={permission}\n                            primary='Nome'\n                            secondary={candidate.name}\n                        />\n                    </>\n                    }\n                    <StyledListItem\n                        className={candidate.birthday ? '' : 'noprint'}\n                        icon={!print && <Avatar variant='rounded'><CalendarMonthIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar Idade', {\n                            label: 'Informe sua data de nascimento',\n                            name: 'birthday',\n                            type: 'date',\n                            initialValue: candidate.birthday?.Format('yyyy-mm-dd')\n                        })}\n                        button={permission}\n                        primary={'Idade'}\n                        secondary={candidate.birthday\n                            ? (candidate.birthday.toDate()?.DiffYears(new Date().toDate()).Round() + ' Anos')\n                            : 'Não informada'}\n                    />\n                    <StyledListItem\n                        icon={!print && <Avatar variant='rounded'><EmailIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar Email', {\n                            label: 'Informe o novo email',\n                            name: 'email',\n                            initialValue: candidate.email\n                        })}\n                        button={permission}\n                        primary='Email'\n                        secondary={candidate.email}\n                    />\n                    <StyledListItem\n                        className={candidate.addressLine ? '' : 'noprint'}\n                        icon={!print && <Avatar variant='rounded'><PlaceIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar linha de endereço', {\n                            label: 'Informe apenas cidade, estado / UF',\n                            name: 'addressLine',\n                            initialValue: candidate.addressLine\n                        })}\n                        button={permission}\n                        primary='Endereço'\n                        secondary={candidate.addressLine}\n                    />\n                </List>\n                <List\n                    className={candidateLinks?.length > 0 ? '' : 'noprint'}\n                    dense\n                    component=\"div\">\n                    <ListSubheader component=\"div\" sx={{ mt: 2, mb: 2 }}><Typography>Social</Typography></ListSubheader>\n                    {candidateLinks.map(link =>\n                        <StyledListItem\n                            button\n                            onClick={() => window.open(link.url)}\n                            key={link.url}\n                            icon={<Avatar variant=\"rounded\" alt={link.title} src={link.icon} sx={{ p: 1 }} />}\n                            primary={link.title}\n                            secondary={link.host}\n                            actions={permission &&\n                                <IconButton className='noprint' onClick={() => {\n                                    delete candidate.links[link.url];\n                                    return Candidate.update(candidate.uuid, { links: candidate.links });\n                                }}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            }\n                        />\n                    )}\n                    {permission &&\n                        <StyledListItem\n                            button\n                            className='noprint'\n                            icon={<Avatar variant='rounded'><AddCircleIcon /></Avatar>}\n                            primary='Adicionar links'\n                            onClick={() => permission && window\n                                .Prompt('Incluír link externo', [{\n                                    label: `Url ex: https://github.com/${candidate.nick}`,\n                                    name: 'link',\n                                    type: 'url'\n                                }])\n                                .then(data => Candidate.update(candidate.uuid, { link: data.link, links: candidate.links }))\n                                .catch(() => console.log('ok'))\n                            }\n                        />\n                    }\n                </List>\n            </div>\n            <List dense sx={{\n                '@media print': {\n                    mt: -3\n                }\n            }}>\n                <StyledListItem\n                    onClick={() => permission && update('Sobre Mim', {\n                        label: 'Digite sua biografia',\n                        name: 'about',\n                        initialValue: candidate.about,\n                        multiline: true,\n                        rows: 9\n                    })}\n                    button={permission}\n                    primary=\"Biografia\"\n                    secondary={\n                        <Typography\n                            variant='caption'\n                            component='pre'\n                            sx={{\n                                whiteSpace: 'pre-wrap'\n                            }}>\n                            {candidate.about || \"não informada ...\"}\n                        </Typography>}\n                />\n            </List>\n        </>)\n}\n\nexport default Perfil;","import Request from \"fx-request/lib/functions/HttpRequest\";\n\n/**\n * @typedef {import(\"@types/web/models\").Skill} Skill\n * @typedef {import(\"@types/web/models\").Question} Question\n */\n\nconst Skill = {\n    get: (q) => Request('get', `/api/skills?q=${q}`),\n    /** \n     * @param {Partial<Skill>} skill\n     * @param {Partial<Skill>} data\n     */\n    update: (skill, data) => Request('put', `/api/skills/${encodeURIComponent(skill.tag)}`, data),\n    /** \n     * @param {string} skilluuid \n     */\n    question: (skilluuid) => ({\n        /**\n         * @param {RequiredKeys<Question>} data \n         */\n        create: (data) => Request('post', `/api/question/${skilluuid}`, data)\n    }),\n    /** \n     * @param {Partial<Skill>} skill\n     */\n    libs: (skill) => ({\n        /** \n         * @param {Partial<Skill[]>} libs\n         */\n        filter: (libs) => libs.filter(lib => skill.tag + lib.title.replace(/[^\\w#&*]/g, '').toLocaleLowerCase() === lib.tag),\n        get: (q) => Request('get', `/api/skills/${encodeURIComponent(skill.tag)}?q=${q}`),\n        /** \n         * @param {string} libuuid \n         */\n        question: (libuuid) => ({\n            /**\n             * @param {RequiredKeys<Question>} data \n             */\n            create: (data) => Request('post', `/api/question/${libuuid}`, data)\n        }),\n    })\n}\n\nexport default Skill;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Skill from '../../services/Skill';\nimport Candidate from '../../services/Candidate';\nimport { Div, CardPanel, CircularProgressWithLabel } from '../../components';\nimport Tooltip from '@mui/material/Tooltip';\nimport Gestures from 'react-indiana-drag-scroll';\n\nfunction calcDate(date1, date2) {\n  const past_date = new Date(date1);\n  const current_date = date2 ? new Date(date2) : new Date();\n\n  const diff = Math.floor(current_date.getTime() - past_date.getTime());\n  const day = 1000 * 60 * 60 * 24;\n\n  const days = Math.ceil(diff / day);\n  const months = Math.ceil(days / 31);\n  const years = Math.ceil(months / 12);\n\n  return { days, months, years };\n}\n\n/**\n *  @type {React.FC<{\n    *  user: import('@types/web/models').User, \n    *  candidate: import('@types/web/models').Candidate, \n    *  permission: any\n * }>} \n */\nconst Skills = ({ candidate, permission, user }) => {\n  const [tags, setTags] = React.useState([]);\n\n  const setTag = React.useCallback((/**@type {number} */ tag) => {\n    setTags(tags.Has(tag) ? tags.filter(x => x !== tag) : [...tags, tag])\n\n  }, [tags])\n\n  const [liblist, setLiblist] = React.useState([]);\n\n  const libs = React.useCallback((skill) => {\n    return Skill.libs(skill).filter(candidate.libs)\n\n  }, [candidate.libs])\n\n  /**\n   * @type { Array<Skill & { points: number, years: number, begin: Date, finish: Date }> }\n   */\n  const skills = React.useMemo(() => {\n    const sk = {};\n    if (candidate.jobs) {\n      for (const job of candidate.jobs) {\n        for (const skill of job.skills) {\n          if (!sk[skill.tag])\n            sk[skill.tag] = {\n              ...skill,\n              points: 0,\n              years: 0,\n              begin: job.begin,\n              finish: job.finish || new Date()\n            }\n\n          if (new Date(sk[skill.tag].begin) > new Date(job.begin)) {\n            sk[skill.tag].begin = job.begin;\n          }\n\n          if (new Date(sk[skill.tag].finish) < new Date(job.finish)) {\n            sk[skill.tag].finish = job.finish;\n          }\n\n          const { months, years } = calcDate(sk[skill.tag].begin, sk[skill.tag].finish);\n\n          if (sk[skill.tag].years < years) {\n            sk[skill.tag].years = years;\n          }\n\n          sk[skill.tag].points += months; // each month increment one point \n          sk[skill.tag].points += libs(skill).length; // increment by number of jobs with this skill\n        }\n      }\n    }\n\n    return Object\n      .values(sk)\n      .sort((a, b) => b.points - a.points)\n      .filter(skill => permission ? true : skill.points > 12);\n\n  }, [candidate.jobs, libs, permission]);\n\n  const handleUpdateSkill = React.useCallback((skill) => {\n    window.Prompt('Atualizar imagem da skill', [\n      { label: `Define um link url para imagem de ${skill.title}`, name: 'image', type: 'url', initialValue: skill.image }\n    ])\n      .then(({ image }) => {\n        if (image && image !== skill.image) {\n          Skill.update(skill, { image });\n        }\n      })\n      .catch(() => console.log('Cancel Skill Update'))\n  }, []);\n\n  const handleConnectSkill = React.useCallback((skill) => {\n    Skill.libs(skill).get('*')\n      .then((response) => {\n        const newLibList = response.data.filter(x => !candidate.libs.Has({ tag: x.tag })).sort((a, b) => a.title.localeCompare(b.title))\n        setLiblist(newLibList);\n\n        window.Prompt(`Habilidades sobre a skill ${skill.title}`, [\n          { label: `Informar uma lib`, name: 'title', type: 'text', inputProps: { list: 'libs', autoComplete: 'off' } }\n        ])\n          .then(({ title }) => {\n            if (title) {\n              Candidate.libs({ title }).connect(skill.tag)\n            }\n          })\n          .catch(() => console.log('Cancel Skill Connect'))\n          .finally(() => setLiblist([]))\n      })\n\n  }, [candidate])\n\n  const getChipProps = React.useCallback((lib) => {\n    return !permission ? {} : {\n      onDelete: () => Candidate.libs(lib).disconnect()\n    }\n  }, [permission])\n\n  return (\n    <>\n      <datalist id=\"libs\">\n        {liblist.map(lib => <option key={lib.tag} value={lib.title} />)}\n      </datalist>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <ListSubheader component=\"div\">Conhecimentos</ListSubheader>\n        </Grid>\n        <Gestures activationDistance={20}>\n          <Grid container\n            className=\"printpadding\"\n            flexWrap=\"nowrap\" sx={{\n              cursor: 'move',\n              p: \"0 12px\",\n              '@media print': {\n                // p: 6\n              }\n            }}>\n            {skills.map((skill) =>\n              <Grid item className=\"printpadding\" key={skill.uuid} p=\"0 9px\">\n                <Div flexDirection=\"column\" sx={{ opacity: skill.points <= 12 && 0.5, userSelect: 'none' }}>\n                  <CircularProgressWithLabel\n                    variant=\"determinate\"\n                    value={parseInt(Number(skill.points).Percent(160, 2))}\n                  >\n                    <IconButton\n                      size='small'\n                      onClick={() => permission ? handleConnectSkill(skill) : setTag(skill.tag)}\n                    >\n                      <Tooltip\n                        placement='right-start'\n                        title={skill.points <= 12 ? \"Pontuação mínima não atingida\" : `${skill.points}pts`}>\n                        <Avatar\n                          className=\"notranslate\"\n                          sx={{ width: 38, height: 38, userSelect: 'none' }}\n                          alt={skill.title}\n                          src={skill.image}>\n                          {skill.title}\n                        </Avatar>\n                      </Tooltip>\n                    </IconButton>\n                  </CircularProgressWithLabel>\n                  <Typography noWrap mt={1} fontWeight={550} fontSize={8} letterSpacing={0} align='center' variant='h2'>{skill.title}</Typography>\n                  <Typography\n                    sx={user?.super && {\n                      textDecoration: \"underline\",\n                      cursor: 'pointer',\n                      '@media print': {\n                        textDecoration: \"none\",\n                      }\n                    }}\n                    onClick={() => user?.super && handleUpdateSkill(skill)}\n                    paragraph\n                    variant=\"caption\"\n                    textAlign=\"center\"\n                    fontSize={9}>\n                    {skill.years} anos\n                  </Typography>\n                </Div>\n              </Grid>\n            )}\n          </Grid>\n        </Gestures>\n        {candidate.libs.length > 0 &&\n          <Grid item xs={12} className=\"printpadding\">\n            <ListSubheader component=\"div\" className=\"notranslate noprint\">\n              Skill's\n            </ListSubheader>\n            <Div justifyContent=\"flex-start\" flexWrap={\"wrap\"} p={1.2}>\n              {skills\n                .map(skill => Skill\n                  .libs(skill).filter(candidate.libs)\n                  .filter(() => tags.length === 0 ? true : tags.some(tag => skill.tag === tag))\n                  .map(lib =>\n                    <Chip\n                      className=\"notranslate\"\n                      key={lib.uuid}\n                      variant=\"outlined\"\n                      avatar={<Avatar alt={skill.title} src={skill.image} />}\n                      label={lib.title}\n                      size=\"small\"\n                      sx={{ mr: 1, mb: 1 }}\n                      {...getChipProps(lib)}\n                    />\n                  )\n                )}\n              {tags.length > 0 &&\n                <i\n                  className='noprint'\n                  onClick={() => setTags([])}\n                  style={{\n                    display: 'block',\n                    marginLeft: 'auto',\n                    fontSize: 12,\n                    textDecoration: 'underline',\n                    cursor: 'pointer'\n                  }}>\n                  Limpar seleção\n                </i>\n              }\n            </Div>\n          </Grid>\n        }\n      </Grid>\n    </>\n  )\n}\n\nexport default Skills;","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useDebounce } from 'usehooks-ts';\n\n/**\n * \n * @type { <DefaultValue extends any>(props: Partial<import('@mui/material').AutocompleteProps> & {\n *  Service(value: DefaultValue): Promise<any> \n *  OnSet(value: DefaultValue): any\n *  OptionLabel: string\n *  label?: string\n *  placeholder?: any\n *  variant?: any\n *  allowCreate?: boolean \n *  disableUnderline?: boolean\n *  clearOnSet?: boolean\n *  helperText?: string\n *  defaultValue?: DefaultValue\n * }) => JSX.Element } props\n */\nconst AutocompleteAsynchronous = ({\n  Service,\n  OnSet,\n  OptionLabel,\n  allowCreate = true,\n  clearOnSet,\n  variant,\n  label,\n  placeholder,\n  size = 'small',\n  disableUnderline = undefined,\n  ...props }) => {\n  const [options, setOptions] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(props.defaultValue);\n\n  const handleChange = (_, data) => {\n    if(clearOnSet){\n      setInputValue('');\n    }\n    if(OnSet) {\n      OnSet(data);\n    }\n  }\n\n  const debouncedValue = useDebounce(inputValue, 1000);\n\n  const fetcher = () => {\n    setOptions([]);\n    setLoading(true);\n    Service(inputValue)\n    .then((response) => {\n      if(response.status === 200)\n      setOptions([...response.data])\n    })\n    .catch(() => setOptions([]))\n    .finally(() => {\n      setLoading(false);\n      });\n  }\n  \n  React.useEffect(() => {\n    if (!!debouncedValue) {\n      fetcher();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedValue]);\n\n  const autocompleteProps = {};\n\n  if(disableUnderline){\n    autocompleteProps['disableUnderline'] = true;\n  }\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      autoHighlight\n      freeSolo\n      // value={inputValue}\n      isOptionEqualToValue={(option, value) => option[OptionLabel] === value[OptionLabel]}\n      getOptionLabel={x => x[OptionLabel]}\n      sx={{\n        '& label': {\n          fontSize: (theme) =>\n            theme.typography.caption.fontSize\n        },\n        '& input': {\n          fontSize: (theme) =>\n            theme.typography.caption.fontSize\n        }\n      }}\n      options={options}\n      onChange={handleChange}\n      onInputChange={(e) => setInputValue(e.currentTarget?.value)}\n      loading={loading}\n      size={size}\n      renderOption={(props, option, { selected }) => (\n        <ListItem dense selected={selected} {...props}>\n          <ListItemText\n            primaryTypographyProps={{\n              variant: 'caption'\n            }}\n            primary={option[OptionLabel]}\n            secondaryTypographyProps={{\n              variant: 'caption',\n              fontSize: 12\n            }}\n            secondary={option?.isNew && 'Adicionar novo'}\n          />\n        </ListItem>\n      )}\n      filterOptions={(defopts, params) => {\n        const inputValue = params.inputValue;\n        if (allowCreate) {\n          let isExisting = 2;\n          if (defopts.length > 0) {\n            isExisting = defopts?.Search(inputValue)?.length || 0;\n          }\n\n          if (!loading && inputValue !== '' && isExisting !== 1) {\n            defopts.unshift({\n              isNew: true,\n              [OptionLabel]: inputValue\n            });\n          }\n        }\n\n        return defopts;\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          disabled={loading}\n          onFocus={({target}) => target.select()}\n          variant={variant}\n          placeholder={placeholder}\n          label={label}\n          InputProps={{\n            ...params.InputProps,\n            ...autocompleteProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport default React.memo(AutocompleteAsynchronous);","import React from \"react\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nconst Subheader = ({ component = \"h1\", title, action, icon, children, ...props }) => {\n    return (\n        <ListSubheader component={component} sx={{m:0}}>\n            {children}\n            {action && (\n                <Tooltip title={title}>\n                    <IconButton sx={{ float: 'right' }} className=\"noprint\" {...props}>\n                        {icon}\n                    </IconButton>\n                </Tooltip>\n            )}\n        </ListSubheader>\n    )\n}\n\nexport default Subheader;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\nimport Skeleton from '@mui/material/Skeleton';\nimport Box from '@mui/material/Box';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineDot from '@mui/lab/TimelineDot';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport { useMediaQuery } from 'usehooks-ts';\nimport Subheader from '../Subheader';\n\n\nconst OppositeComponent = (props) => {\n    return props.begin && (\n        <Typography variant=\"caption\" fontSize={12} display=\"block\" sx={{ '@media print': { width: 80 } }}>\n            <i>{new Date(props.begin).Format('mm/yyyy')} até {props.finish ? new Date(props.finish).Format('mm/yyyy') : 'Atual'}</i>\n        </Typography>\n    )\n}\n\n\nexport const TimelineSkeleton = React.memo((props) => (<>\n    <Subheader><Skeleton sx={{mt:2}} variant='text' width={100} height={24} /></Subheader>\n    <Timeline>\n        {Array.from({ length: 3 }).map((_, i) =>\n            <TimelineItem key={'timeline-skeleton-' + i}>\n                <TimelineOppositeContent sx={{ p: 0, flex: 0, mt: 0 }} />\n                <TimelineSeparator>\n                    <Skeleton variant=\"circular\" width={42} height={42} />\n                    {i < 2 && <TimelineConnector />}\n                </TimelineSeparator>\n                <TimelineContent mb={2}>\n                    <List\n                        component=\"div\"\n                        dense\n                        disablePadding\n                        sx={{ borderRadius: 2, ml: -1, mt: -2 }}\n                    >\n                        <ListItem component=\"div\">\n                            <ListItemText\n                                primaryTypographyProps={{ variant: 'subtitle2' }}\n                                primary={<Skeleton variant=\"text\" width={90} />}\n                                secondaryTypographyProps={{ variant: 'caption', color: 'primary' }}\n                                secondary={<Skeleton variant=\"text\" width={135} />}\n                            />\n                        </ListItem>\n                    </List>\n                    {props.child &&\n                        <Box pl={1}>\n                            <Typography gutterBottom display=\"block\" variant=\"caption\">\n                                <Skeleton variant=\"text\"  />\n                                <Skeleton variant=\"text\" width={250}/>\n                            </Typography>\n                        </Box>}\n                </TimelineContent>\n            </TimelineItem>\n        )}\n    </Timeline>\n</>))\n\nconst TimeLine = ({\n    list = [],\n    children: Children,\n    actions: Actions,\n    icon,\n    primaryText,\n    secondaryText,\n    first,\n    title,\n    collapsed = [0],\n    ...props\n}) => {\n    const [collapse, setCollapse] = React.useState(collapsed);\n    const print = useMediaQuery('print');\n\n    return (<>\n        <Subheader>{title}</Subheader>\n        <Timeline {...props}>\n            {!!first &&\n                <TimelineItem className='noprint'>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0 }} />\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        {first}\n                    </TimelineContent>\n                </TimelineItem>}\n            {list.length === 0 &&\n                <TimelineItem className='noprint' sx={{ opacity: 0.5 }}>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0 }} />\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <List\n                            component=\"div\"\n                            dense\n                            disablePadding\n                            sx={{ borderRadius: 2, ml: -1, mt: -2 }}\n                        >\n                            <ListItem component=\"div\" >\n                                <ListItemText\n                                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                                    primary={<>\n                                        <b>Não informado</b>\n                                    </>}\n                                    secondaryTypographyProps={{ variant: 'caption', color: 'primary' }}\n                                    secondary=\"Adicione alguns items na sua linha do tempo\"\n                                />\n                            </ListItem>\n                        </List>\n                    </TimelineContent>\n                </TimelineItem>\n            }\n            {list.map((item, i) =>\n                <TimelineItem key={item.uuid + '-' + i}>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0, mt: 0, '@media print': { pr: 2 } }}>\n                        {print && <OppositeComponent {...item} />}\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar src={item.image} alt={item[secondaryText]}>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        {i + 1 < list.length && <TimelineConnector />}\n                    </TimelineSeparator>\n                    <TimelineContent mb={2}>\n                        <List\n                            component=\"div\"\n                            dense\n                            disablePadding\n                            sx={{ borderRadius: 2, ml: -1, mt: item[secondaryText] ? -3 : -2, '@media print': { mt: item[secondaryText] ? -2 : -1 } }}\n                        >\n                            <ListItem\n                                component=\"div\"\n                                button={!!Children}\n                                onClick={() => setCollapse([i])}>\n                                <ListItemText\n                                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                                    primary={<>\n                                        {!print && <OppositeComponent {...item} />}\n                                        <b>{item[primaryText]}</b>\n                                    </>}\n                                    secondaryTypographyProps={{ variant: 'caption', color: 'primary' }}\n                                    secondary={item[secondaryText]}\n                                />\n                                {Actions && <Actions {...item} />}\n                            </ListItem>\n                        </List>\n                        {!!Children &&\n                            <Collapse in={collapse.includes(i) || print}>\n                                <Children {...item} />\n                            </Collapse>\n                        }\n                    </TimelineContent>\n                </TimelineItem>\n            )}\n        </Timeline>\n    </>)\n}\n\nexport default TimeLine;","import React from 'react';\n\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\n\nimport Chip from '@mui/material/Chip';\nimport Candidate from '../../services/Candidate';\nimport { BusinessIcon, DeleteIcon, EditIcon } from '../../components/Icons';\nimport AutocompleteAsynchronous from '../../components/AutocompleteAsync';\nimport Skill from '../../services/Skill';\nimport CardPanel from '../../components/CardPanel';\nimport TimeLine from '../../components/Timeline';\n\nconst inputs = {\n  occupation: { label: 'Cargo/Função/Projeto', name: 'occupation', type: 'text' },\n  begin: { label: 'Data inicio', name: 'begin', type: 'date' },\n  company: { label: 'Empresa/Instituição', name: 'company', type: 'text', optional: true },\n  finish: { label: 'Data Término', name: 'finish', type: 'date', optional: true },\n  description: { label: 'Descrição das atividades', name: 'description', multiline: true, rows: 4 },\n  site: { label: 'Site', name: 'site', type: 'url', optional: true }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Jobs = ({ candidate, permission }) => {\n\n\n  const handleCreateJob = () => window.Prompt('Cadastrar Job', [\n    inputs.occupation,\n    inputs.begin,\n    inputs.company,\n    inputs.finish,\n    inputs.description\n  ]).then(Candidate.jobs().create);\n\n  const handleUpdateJob = React.useCallback(\n    (job) => window.Prompt('Editar job', [\n      { ...inputs.occupation, initialValue: job.occupation },\n      { ...inputs.company, initialValue: job.company },\n      { ...inputs.description, initialValue: job.description },\n      { ...inputs.begin, initialValue: job.begin?.Format('yyyy-mm-dd') || null },\n      { ...inputs.finish, initialValue: job.finish?.Format('yyyy-mm-dd') || null },\n      { ...inputs.site, initialValue: job.site || null },\n    ])\n      .then(Candidate.jobs(job).update), []);\n\n  const handleDeleteJob = React.useCallback(\n    (job) => window.Confirm(`Confirma a exclusão de ${job.company}?`).then(Candidate.jobs(job).delete), []\n  );\n\n  const handleConnectSkill = React.useCallback((job, skill) => {\n    if (skill?.title) {\n      return Candidate.jobs(job).skills(skill).connect(true);\n    }\n\n  }, []);\n\n  const getChipProps = React.useCallback((job, skill) => {\n    return !permission ? {} : {\n      onDelete: () => Candidate.jobs(job).skills(skill).connect(false)\n    }\n  }, [permission])\n\n  return (\n    <TimeLine\n      title=\"Experiências\"\n      icon={<BusinessIcon fontSize=\"small\" />}\n      list={candidate.jobs.sort((x, y) => new Date(y.begin).getTime() - new Date(x.begin).getTime())}\n      primaryText=\"occupation\"\n      secondaryText=\"company\"\n      first={permission &&\n        <ListItem\n          onClick={handleCreateJob}\n          dense\n          button\n          component=\"div\"\n          sx={{ borderRadius: 2, ml: -1, mt: -1 }}>\n          <ListItemText\n            component=\"div\"\n            primaryTypographyProps={{ variant: 'subtitle2' }}\n            primary=\"Adicionar experiência\"\n          />\n        </ListItem>\n      }\n      actions={(job) => permission && (\n        <ListItemSecondaryAction>\n          <Tooltip title=\"Editar Job\">\n            <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateJob(job)}>\n              <EditIcon color=\"primary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Excluir Job\">\n            <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteJob(job)}>\n              <DeleteIcon color=\"warning\" />\n            </IconButton>\n          </Tooltip>\n        </ListItemSecondaryAction>\n      )}\n    >\n      {(job) => (\n        <Box pl={1}>\n          {job.site &&\n            <Link href={job.site} target=\"_blank\" underline=\"none\">\n              <Typography gutterBottom display=\"block\" variant=\"caption\">\n                {job.site}\n              </Typography>\n            </Link>\n          }\n          <Typography gutterBottom display=\"block\" variant=\"caption\">\n            {job.description}\n          </Typography>\n          <Typography gutterBottom display=\"block\" variant=\"caption\">\n            Conhecimentos\n          </Typography>\n          <Box width=\"100%\" pt={2}>\n            {job.skills.map(skill =>\n              <Chip\n                avatar={<Avatar alt={skill.title} src={skill.image} />}\n                className=\"notranslate\"\n                key={skill.uuid}\n                label={skill.title}\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{ mr: 1, mb: 1 }}\n                {...getChipProps(job, skill)}\n              />\n            )}\n          </Box>\n          {/* <Box hidden={!permission} width=\"100%\" pt={2}>\n            <AutocompleteAsynchronous\n              disableUnderline\n              disableClearable\n              allowCreate={false}\n              OptionLabel=\"formattedAddress\"\n              value={job?.location}\n              placeholder=\"Pesquisar endereço\"\n              label=\"Localização\"\n              variant=\"standard\"\n              Service={(e) => Maps.geocode(e)}\n              OnSet={console.log}\n            /></Box> */}\n          <Box hidden={!permission} width=\"100%\" pt={2}>\n            <AutocompleteAsynchronous\n              className=\"notranslate noprint\"\n              clearOnSet\n              OptionLabel='title'\n              label=\"Nova skill\"\n              Service={(e) => Skill.get(e)}\n              OnSet={data => handleConnectSkill(job, data)}\n            />\n          </Box>\n        </Box>\n      )}\n    </TimeLine>\n  )\n}\n\nexport default Jobs;\n","import React from \"react\";\nimport { CardPanel } from \"../../components\";\nimport TimeLine from \"../../components/Timeline\";\n\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport { DeleteIcon, EditIcon, SchoolIcon } from \"../../components/Icons\";\nimport Candidate from \"../../services/Candidate\";\n\nconst inputs = {\n    begin: { label: 'Data inicio', name: 'begin', type: 'date' },\n    course: { label: 'Curso/Aprendizado', name: 'course', type: 'text' },\n    institution: { label: 'Instituição', name: 'institution', type: 'text', optional: true },\n    finish: { label: 'Data Término', name: 'finish', type: 'date', optional: true },\n    site: { label: 'Site', name: 'site', type: 'url', optional: true }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Education = ({ candidate, permission }) => {\n\n    const handleCreateEducation = React.useCallback(() => {\n        window.Prompt('Cadastrar Estudo', [\n            inputs.begin,\n            inputs.course,\n            inputs.institution,\n            inputs.finish\n        ])\n            .then(Candidate.educations().create);\n    }, [])\n\n    const handleUpdateEducation = React.useCallback(\n        (education) => window.Prompt('Editar Estudo', [\n            { ...inputs.begin, initialValue: education.begin?.Format('yyyy-mm-dd') || null },\n            { ...inputs.course, initialValue: education.course },\n            { ...inputs.institution, initialValue: education.institution },\n            { ...inputs.finish, initialValue: education.finish?.Format('yyyy-mm-dd') || null },\n            { ...inputs.site, initialValue: education.site || null },\n        ])\n            .then(Candidate.educations(education).update), []);\n\n    const handleDeleteEducation = React.useCallback(\n        (education) => window.Confirm(`Confirma a exclusão de ${education.company}?`).then(Candidate.educations(education).delete), []\n    );\n\n    return (\n        <TimeLine\n            icon={<SchoolIcon fontSize=\"small\" />}\n            title=\"Estudos/Aprendizados\"\n            list={(candidate?.educations || []).sort((x, y) => new Date(y.begin).getTime() - new Date(x.begin).getTime())}\n            primaryText=\"course\"\n            secondaryText=\"institution\"\n            first={permission &&\n                <ListItem\n                    onClick={handleCreateEducation}\n                    dense\n                    button\n                    component=\"div\"\n                    sx={{ borderRadius: 2, ml: -1, mt: -1 }}>\n                    <ListItemText\n                        component=\"div\"\n                        primaryTypographyProps={{ variant: 'subtitle2' }}\n                        primary=\"Adicionar Estudo\"\n                    />\n                </ListItem>\n            }\n            actions={(course) => permission && (\n                <ListItemSecondaryAction>\n                    <Tooltip title=\"Editar Estudo\">\n                        <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateEducation(course)}>\n                            <EditIcon color=\"primary\" />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Excluir Estudo\">\n                        <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteEducation(course)}>\n                            <DeleteIcon color=\"warning\" />\n                        </IconButton>\n                    </Tooltip>\n                </ListItemSecondaryAction>\n            )}\n        />\n    )\n}\n\nexport default Education;","import React from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport Candidate from \"../../services/Candidate\";\nimport { AddCircleIcon, DeleteIcon, EditIcon, LanguageIcon, RadioButtonCheckedIcon, RadioButtonUncheckedIcon } from \"../../components/Icons\";\nimport { CardPanel } from \"../../components\";\n\nconst inputs = {\n    title: { label: 'Língua', name: 'title', type: 'text' },\n    level: { label: 'Level', name: 'level', type: 'text' }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Language = ({ candidate, permission }) => {\n\n    const handleCreateLanguages = React.useCallback(() => {\n        window.Prompt('Cadastrar Idioma', [\n            inputs.title\n        ])\n            .then(Candidate.languages().create);\n    }, [])\n\n    const handleUpdateLanguages = React.useCallback(\n        (language) => window.Prompt('Editar Idioma', [\n            { ...inputs.title, initialValue: language.title }\n        ])\n            .then(Candidate.languages(language).update), []);\n\n    const getStarRate = React.useCallback((rate) => {\n        switch (rate) {\n            case 1: return 'Nenhuma';\n            case 2: return 'Básico';\n            case 3: return 'Intermediário';\n            case 4: return 'Avançado';\n            case 5: return 'Fluente';\n            default: return '';\n        }\n    }, [])\n\n    const handleDeleteLanguages = React.useCallback(\n        (language) => window.Confirm(`Confirma a exclusão de ${language.title}?`).then(Candidate.languages(language).delete), []\n    );\n\n    return (\n        <List\n            dense\n            subheader={\n                <ListSubheader>\n                    Idiomas\n                    {permission && (\n                        <IconButton sx={{ float: 'right' }} className=\"noprint\" onClick={handleCreateLanguages}>\n                            <AddCircleIcon />\n                        </IconButton>\n                    )}\n                </ListSubheader>}\n        >\n\n            {(candidate?.languages || []).map((language) => (\n                <ListItem dense key={language.uuid}>\n                    <ListItemIcon className=\"noprint\"><Avatar><LanguageIcon fontSize=\"small\" /></Avatar></ListItemIcon>\n                    <ListItemText\n                        primary={language.title}\n                    />\n                    <ListItemSecondaryAction>\n                        {(!permission && language.level > 5)\n                            ? <Typography color=\"primary\" variant=\"caption\"><i style={{ fontWeight: 650 }}>Nativo</i></Typography>\n                            : [1, 2, 3, 4, 5].map((lv) =>\n                                <Tooltip title={getStarRate(lv)} key={`start-${lv}`}>\n                                    <IconButton\n                                        onClick={() => permission && Candidate.languages(language).update({ level: lv })}\n                                        size=\"small\"\n                                        sx={{ mr: -1.3 }}>\n                                        {language.level >= lv\n                                            ? <RadioButtonCheckedIcon color=\"primary\" fontSize=\"small\" />\n                                            : <RadioButtonUncheckedIcon color=\"primary\" fontSize=\"small\" />\n                                        }\n                                    </IconButton>\n                                </Tooltip>\n                            )\n                        }\n\n                        {permission && (\n                            <>\n                                <Tooltip title=\"Nativo\">\n                                    <IconButton\n                                        className=\"noprint\"\n                                        onClick={() => permission && Candidate.languages(language).update({ level: 6 })}\n                                        size=\"small\">\n                                        {language.level > 5\n                                            ? <RadioButtonCheckedIcon />\n                                            : <RadioButtonUncheckedIcon />\n                                        }\n                                    </IconButton>\n                                </Tooltip>\n\n                                <Tooltip title=\"Editar Idioma\">\n                                    <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateLanguages(language)}>\n                                        <EditIcon color=\"primary\" />\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Excluir Idioma\">\n                                    <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteLanguages(language)}>\n                                        <DeleteIcon color=\"warning\" />\n                                    </IconButton>\n                                </Tooltip>\n                            </>\n                        )}\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))\n            }\n        </List>\n    )\n}\n\nexport default Language;","import React from \"react\";\nimport Skeleton from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport { Container, StyledListItem, CardPanel } from '../../components';\n\n\nexport const SkeletonPerfil = React.memo(() => (\n   <>\n      <Box\n         height={200}\n         display=\"flex\"\n         justifyContent=\"center\"\n         alignItems=\"center\"\n         position=\"relative\"\n         overflow=\"hidden\"\n      >\n         <Box sx={{ textAlign: 'center' }}>\n            <Skeleton variant=\"rectangular\" width={120} height={120} />\n            <Typography p={2} textAlign=\"center\" color=\"WindowText\" fontWeight={666}>\n               <Skeleton variant=\"text\" />\n            </Typography>\n         </Box>\n      </Box>\n      {Array.from({ length: 2 }).map((_, x) =>\n         <List dense key={`perfil-${x}`}>\n            <ListSubheader sx={{ mt: 2, mb: 2 }}>\n               <Typography> <Skeleton width={75} variant=\"text\" /></Typography>\n            </ListSubheader>\n            {[0, 1, 2].map((_, y) =>\n               <StyledListItem\n                  key={`perfil-${x}-${y}`}\n                  icon={<Skeleton variant=\"rectangular\" width={40} height={40} />}\n                  primary={<Skeleton width={100} variant=\"text\" />}\n                  secondary={<Skeleton width={150} variant=\"text\" />}\n               />\n            )}\n         </List>\n      )}\n   </>\n))\n\nfunction getRndInteger(min, max) {\n   return Math.floor(Math.random() * (max - min + 1)) + min;\n }\n\nexport const SkeletonSkills = React.memo(() => (\n   <Grid container spacing={1}>\n      <Grid item xs={12} m={2}>\n         <Skeleton height={20} width={100} variant=\"text\" />\n      </Grid>\n      <Grid container flexWrap=\"nowrap\" sx={{ p: \"0 12px\" }}>\n         {Array.from({ length: 8 }).map((_, x) =>\n            <Grid item key={`skills-${x}`} p=\"0 8px\" >\n               <Box flexDirection=\"column\">\n                  <Skeleton variant=\"circular\" width={68} height={68} sx={{mb:2}} />\n                  <Skeleton height={14} sx={{mb:0.5}} variant=\"text\" />\n                  <Skeleton height={10} width={50} sx={{m: '0 auto'}} variant=\"text\" />\n               </Box>\n            </Grid>\n         )}\n      </Grid>\n      <Grid item xs={12}>\n         <Skeleton sx={{ m: 2 }} height={20} width={75} variant=\"text\" />\n         <Box justifyContent=\"flex-start\" flexWrap={\"wrap\"} p={1.2}>\n            {Array.from({ length: 25 }).map((_, x) =>\n               <Chip\n                  key={`libs-${x}`}\n                  variant=\"outlined\"\n                  avatar={<Skeleton variant=\"circular\" width={18} height={18} />}\n                  label={<Skeleton height={15} width={getRndInteger(30, 75)} variant=\"text\" />}\n                  size=\"small\"\n                  sx={{ mr: 1, mb: 1 }}\n               />\n            )}\n         </Box>\n      </Grid>\n   </Grid>\n))\n\nexport const SkeletonLanguages = React.memo(() => (\n   <List dense>\n      <ListSubheader><Skeleton sx={{mt:2, mb:2}} height={20} width={75} variant=\"text\" /></ListSubheader>\n      {Array.from({ length: 3 }).map((_, x) => (\n         <StyledListItem\n            key={`languages-${x}`}\n            icon={<Skeleton variant=\"rectangular\" width={40} height={40} />}\n            primary={<Skeleton width={100} variant=\"text\" />}\n            actions={<Skeleton width={150} variant=\"text\" />}\n         />\n      ))\n      }\n   </List>\n))\n\nconst PageSkeleton = () => {\n   return (\n      <Container spacing={1} p={1} alignContent=\"flex-start\">\n         <Grid item xs={12} sm={4} lg={3}>\n            <CardPanel sx={{ mb: 2, pl: 2 }}>\n               <SkeletonPerfil />\n            </CardPanel>\n         </Grid>\n         <Grid item xs={12} sm={8} lg={9} sx={{ minHeight: '60vh' }}>\n            <Grid container spacing={1}>\n               <Grid item xs={12} lg={12}>\n                  <CardPanel fill={false} sx={{ mb: 2, pl: 2, pr: 2 }}>\n                     <SkeletonSkills />\n                  </CardPanel>\n               </Grid>\n               <Grid item xs={12} lg={6}>\n                  <CardPanel fill={false} sx={{ mb: 2, pb: 2, pl: 2 }}>\n                     <SkeletonLanguages />\n                  </CardPanel>\n               </Grid>\n               <Grid item xs={12} lg={6}>\n\n               </Grid>\n            </Grid>\n         </Grid >\n      </Container >\n   )\n}\n\nexport default PageSkeleton;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { ArrowBackIcon } from '../../components/Icons';\nimport { Container } from '../../components';\n\nconst NotFound = ({params}) => {\n    const navigate = useNavigate();\n\n    return (\n        <Container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            minHeight=\"calc(100vh - 74px)\"\n        >\n            <Grid item xs={10} lg={4} p={4} boxShadow={4} bgcolor=\"background.paper\">\n                <Grid container spacing={1}>\n                    <Box p={1} display=\"flex\">\n                        <Avatar sx={{ ml: 1, mr: 3, mt: 1 }}>\n                            <IconButton color='secondary' onClick={() => navigate('/home')}>\n                                <ArrowBackIcon />\n                            </IconButton>\n                        </Avatar>\n                        <div>\n                            <Typography variant='subtitle1'>{params.nick}</Typography>\n                            <Typography variant='subtitle2'>Não foi localizado</Typography>\n                        </div>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n\n    )\n};\n\nexport default NotFound;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from 'socket.io-hook';\nimport { CardPanel, Container } from '../../components';\nimport Perfil from './perfil';\nimport Skills from './skills';\nimport Jobs from './jobs';\nimport Grid from '@mui/material/Grid';\nimport Education from './Education';\nimport Language from './language';\nimport { SkeletonLanguages, SkeletonPerfil, SkeletonSkills } from './skeleton';\nimport NotFound from './notfound';\nimport { useMediaQuery } from 'usehooks-ts';\nimport { TimelineSkeleton } from '../../components/Timeline';\n\nconst GridPerfil = React.memo((props) => (\n    <Grid item xs={12} sm={4} lg={3}>\n        <CardPanel\n            sx={{\n                mb: 2,\n                pl: 2,\n                '@media print': {\n                    m: 0,\n                    p: 0\n                }\n            }}\n        >\n            {!props?.candidate?.nick\n                ? <SkeletonPerfil />\n                : <Perfil {...props} />\n            }\n        </CardPanel>\n    </Grid>\n))\n\nconst GridSkills = React.memo((props) => (\n    <Grid item xs={12} lg={12}>\n        <CardPanel\n            titleTypographyProps={{ variant: 'caption' }}\n            fill={false}\n            sx={{\n                mb: 2,\n                pl: 2,\n                pr: 2,\n                '@media print': {\n                    m: 0,\n                    p: 0\n                }\n            }}\n        >\n            {props?.candidate?.libs && props.candidate.jobs\n                ? <Skills {...props} />\n                : <SkeletonSkills />\n            }\n        </CardPanel>\n    </Grid>\n))\n\nconst GridEducation = React.memo((props) => (\n    <Grid item xs={12} lg={6} sx={{ height: '100%', minHeight: 275 }}>\n        <CardPanel\n            fill={false}\n            sx={{\n                mb: 2,\n                pb: 2,\n                pl: 2,\n                '@media print': {\n                    width: '35%',\n                    float: 'right',\n                    height: '100%',\n                    mr: 8\n                }\n            }}>\n            {!props?.candidate?.languages\n                ? <SkeletonLanguages />\n                : <Language {...props} />\n            }\n        </CardPanel>\n        <CardPanel\n            titleTypographyProps={{ variant: 'caption' }}\n            fill={false}\n            sx={{\n                pl: 2,\n                display: 'block',\n                '@media print': {\n                    m: 0,\n                    p: 0,\n                    width: '65%',\n                    float: 'left'\n                }\n            }}>\n            {!props?.candidate?.educations\n                ? <TimelineSkeleton child={false} />\n                : <Education {...props} />\n            }\n        </CardPanel>\n    </Grid>\n))\n\nconst GridJobs = React.memo((props) => (\n    <Grid item xs={12} lg={6}>\n        <div className='pagebreak'></div>\n        <CardPanel\n            fill={false}\n            sx={{\n                mb: 2,\n                pl: 2,\n                '@media print': {\n                    m: 0,\n                    p: 0\n                }\n            }}>\n            {!props?.candidate?.jobs\n                ? <TimelineSkeleton child={true} />\n                : <Jobs {...props} />\n            }\n        </CardPanel>\n    </Grid>\n))\n\n\nconst PageCandidate = () => {\n    const user = useSelector(state => state.user);\n    const candidate = useSelector(state => state.candidate);\n    const candidates = useSelector(state => state.candidates);\n    const print = useMediaQuery('print');\n    const socket = useSocket();\n    const params = useParams();\n\n    React.useEffect(() => {\n        socket.emit('subscribe', params.nick);\n\n        return () => {\n            socket.emit('unsubscribe', params.nick);\n        }\n\n    }, [socket, params.nick, user]);\n\n    const GridProps = {\n        candidate: candidate,\n        candidates: candidates,\n        permission: candidates.findIndex(e => e.uuid === candidate.uuid) !== -1,\n        user: user\n    };\n\n    if (candidate?.notFound) {\n        return <NotFound params={params} />\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>{params.nick}</title>\n            </Helmet>\n            <Container spacing={1} p={1} alignContent=\"flex-start\">\n                <GridPerfil {...GridProps} />\n                <Grid item xs={12} sm={8} lg={9}>\n                    <Grid container spacing={1}>\n                        {print\n                            ? <>\n                                <GridEducation {...GridProps} />\n                                <GridSkills {...GridProps} />\n                            </>\n                            : <>\n                                <GridSkills {...GridProps} />\n                                <GridEducation {...GridProps} />\n                            </>\n                        }\n                        <GridJobs {...GridProps} />\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default PageCandidate;\n","// import { Request } from \"./Request\";\nimport Request from \"fx-request/lib/functions/HttpRequest\";\nimport SerializeQueryString from \"fx-request/lib/functions/SerializeQueryString\";\n\n/**\n * @typedef {import(\"@types/web/models\").Candidate } Candidate\n * @typedef {import(\"@types/web/models\").Job } Job\n * @typedef {import(\"@types/web/models\").Education } Education\n * @typedef {import(\"@types/web/models\").Skill } Skill\n * @typedef {import(\"@types/web/models\").Language } Language\n */\n\nconst Candidate = {\n    /**\n     * @param {Partial<Candidate>} data \n     */\n    search: (data) => Request('get', '/api/candidate?' + SerializeQueryString(data)),\n    get: () => Request('get', '/api/candidates'),\n    /**\n     * @param {RequiredKeys<Candidate>} data \n     */\n    create: (data) => Request('post', '/api/candidates', data),\n    /**\n    * @param {RequiredKeys<Candidate>} data \n    */\n    delete: (data) => Request('delete', '/api/candidates/' + data.uuid),\n    /**\n     * @param {string} uuid\n     * @param {RequiredKeys<Candidate>} data \n     */\n    update: (uuid, data) => Request('put', `/api/candidates/${uuid}`, data),\n    /** \n     * @param {Partial<Skill>} lib\n     */\n    libs: (lib) => ({\n        connect: (/**@type {string}*/ tag) => Request('post', `/api/skills/${encodeURIComponent(tag)}`, lib),\n        disconnect: () => Request('delete', `/api/skills/${encodeURIComponent(lib.tag)}`),\n    }),\n    /**\n     * @param {Partial<Job>} job\n     */\n    jobs: (job = {}) => ({\n        /**\n         * @param {RequiredKeys<Job>} data \n         */\n        create: (data) => Request('post', `/api/jobs/`, data),\n        /**\n         * @param {Partial<Job>} data \n         */\n        update: (data) => Request('put', `/api/jobs/${job.uuid}`, data),\n        delete: () => Request('delete', `/api/jobs/${job.uuid}`),\n        /** \n         * @param {Partial<Skill>} skill\n         */\n        skills: (skill) => ({\n            delete: () => Request('delete', `/api/skills/${encodeURIComponent(skill.tag)}`, { company: job.uuid }),\n            connect: (connect) => Request(connect ? 'post' : 'delete', `/api/skills`, { ...skill, company: job.uuid }),\n        })\n    }),\n    /**\n     * @param {Partial<Education>} education\n     */\n    educations: (education = {}) => ({\n        /**\n         * @param {RequiredKeys<Education>} data \n         */\n        create: (data) => Request('post', `/api/educations/`, data),\n        /**\n         * @param {Partial<Education>} data \n         */\n        update: (data) => Request('put', `/api/educations/${education.uuid}`, data),\n        delete: () => Request('delete', `/api/educations/${education.uuid}`),\n    }),\n    /**\n     * @param {Partial<Language>} language\n     */\n    languages: (language = {}) => ({\n        /**\n         * @param {RequiredKeys<Language>} data \n         */\n        create: (data) => Request('post', `/api/languages/`, data),\n        /**\n         * @param {Partial<Language>} data \n         */\n        update: (data) => Request('put', `/api/languages/${language.uuid}`, data),\n        delete: () => Request('delete', `/api/languages/${language.uuid}`),\n    })\n}\n\nexport default Candidate;"],"names":["Container","props","theme","useTheme","minHeight","React","toolbar","mixins","spacing","Number","window","innerHeight","parseInt","container","alignContent","justifyContent","width","height","boxSizing","md","variant","button","actionArea","children","padding","fill","sx","Card","className","p","display","CardActionArea","CardHeader","fontSize","title","CircularProgressWithLabel","Box","placeContent","position","CircularProgress","value","size","top","left","bottom","right","alignItems","textAlign","Typography","component","color","show","candidate","permission","navigate","useNavigate","print","useMediaQuery","update","input","Prompt","type","then","data","Candidate","uuid","res","status","name","nick","setTimeout","Alert","catch","console","log","deleteCandidate","Confirm","candidateLinks","links","Object","keys","map","e","icon","url","host","URL","pathname","error","overflow","backgroundImage","backgroundSize","backgroundRepeat","IconButton","disabled","onClick","label","Avatar","alt","src","image","fontWeight","Tooltip","Delete","List","dense","ListSubheader","mt","mb","StyledListItem","CardMembership","initialValue","primary","AccountCircle","secondary","birthday","CalendarMonth","Format","toDate","DiffYears","Date","Round","Email","email","addressLine","Place","length","link","open","actions","AddCircle","about","multiline","rows","whiteSpace","get","q","Request","skill","encodeURIComponent","tag","question","skilluuid","create","libs","filter","lib","replace","toLocaleLowerCase","libuuid","calcDate","date1","date2","past_date","current_date","diff","Math","floor","getTime","days","ceil","months","years","user","tags","setTags","setTag","Has","x","liblist","setLiblist","Skill","skills","sk","jobs","job","points","begin","finish","values","sort","a","b","handleUpdateSkill","handleConnectSkill","response","newLibList","localeCompare","inputProps","list","autoComplete","connect","finally","getChipProps","onDelete","disconnect","id","item","xs","activationDistance","flexWrap","cursor","flexDirection","opacity","userSelect","Percent","placement","noWrap","letterSpacing","align","super","textDecoration","paragraph","some","Chip","avatar","mr","style","marginLeft","AutocompleteAsynchronous","Service","OnSet","OptionLabel","allowCreate","clearOnSet","placeholder","disableUnderline","undefined","options","setOptions","loading","setLoading","defaultValue","inputValue","setInputValue","debouncedValue","useDebounce","autocompleteProps","Autocomplete","fullWidth","autoHighlight","freeSolo","isOptionEqualToValue","option","getOptionLabel","typography","caption","onChange","_","onInputChange","currentTarget","renderOption","selected","ListItem","ListItemText","primaryTypographyProps","secondaryTypographyProps","isNew","filterOptions","defopts","params","isExisting","Search","unshift","renderInput","TextField","onFocus","target","select","InputProps","endAdornment","action","m","float","OppositeComponent","TimelineSkeleton","Skeleton","Timeline","Array","from","i","TimelineItem","TimelineOppositeContent","flex","TimelineSeparator","TimelineConnector","TimelineContent","disablePadding","borderRadius","ml","child","pl","gutterBottom","Children","Actions","primaryText","secondaryText","first","collapsed","collapse","setCollapse","TimelineDot","pr","Collapse","in","includes","inputs","occupation","company","optional","description","site","handleUpdateJob","handleDeleteJob","delete","Business","y","ListItemSecondaryAction","Edit","Link","href","underline","pt","hidden","AutocompleteAsync","course","institution","handleCreateEducation","handleUpdateEducation","education","handleDeleteEducation","School","educations","level","handleCreateLanguages","handleUpdateLanguages","language","getStarRate","rate","handleDeleteLanguages","subheader","languages","ListItemIcon","lv","RadioButtonChecked","RadioButtonUnchecked","SkeletonPerfil","SkeletonSkills","min","max","random","SkeletonLanguages","lg","boxShadow","bgcolor","ArrowBack","GridPerfil","sm","GridSkills","titleTypographyProps","GridEducation","pb","GridJobs","useSelector","state","candidates","socket","useSocket","useParams","emit","GridProps","findIndex","notFound","Helmet","search","SerializeQueryString"],"sourceRoot":""}