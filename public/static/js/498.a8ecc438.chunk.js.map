{"version":3,"file":"static/js/498.a8ecc438.chunk.js","mappings":"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","sources":["components/Container/index.js","components/StackIconButton/index.js","components/Emblem/index.js","pages/Home/index.js","services/Candidate.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { useTheme } from '@mui/material/styles';\n\n/** @type { React.FC<import('@mui/material/Grid').GridProps> } */\nconst Container = (props) => {\n    const theme = useTheme();\n    \n    const minHeight = React.useMemo(() => {\n        const toolbar = theme.mixins.toolbar.minHeight;\n        const spacing = theme.spacing(Number(props?.spacing || 0));\n        \n        return `calc(${window.innerHeight}px - ${parseInt(spacing) + toolbar}px)`;\n        \n    }, [theme, props.spacing])\n    \n    return (\n        <Grid\n            container\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            width=\"auto\"\n            height=\"auto\"\n            boxSizing=\"border-box\"\n            minHeight={{md:minHeight}}\n            {...props}\n        />\n    )\n}\n\nexport default React.memo(Container);","import React from 'react';\nimport IconButton from '@mui/material/IconButton';\nconst StackIconButton = ({ button, ...props }) => {\n    return (\n        <div style={{ margin: '0 auto' }}>\n            {!!button ? <IconButton {...props} /> : props.children}\n        </div>\n    )\n}\n\nexport default StackIconButton;","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\n/**\n * @param {import('@mui/material').BoxProps} props \n */\nexport default function Emblem(props) {\n    return (\n        <Box textAlign=\"left\" {...props}>\n            <Typography\n                variant='h2'\n                fontSize={15}\n                letterSpacing={-3}\n            >{'WEB'}</Typography>\n            <Typography\n                variant='h1'\n                fontWeight={600}\n                fontSize={28}\n                letterSpacing={-1}\n            >{'CVDEV'}</Typography>\n            <Typography\n                variant='h2'\n                fontSize={18}\n                fontStyle=\"initial\"\n                letterSpacing={-2}\n            >{'de dev pra dev'}</Typography>\n        </Box>\n    )\n}","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\n\nimport InputField from 'react-mui-input-field';\nimport Button from '@mui/material/Button';\n\nimport Container from '../../components/Container';\nimport Emblem from '../../components/Emblem';\n\nimport useAuth from '../../hooks/useAuth';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport Candidate from '../../services/Candidate';\nimport StackIconButton from '../../components/StackIconButton';\n\nconst Home = () => {\n    const navigate = useNavigate()\n    const [exists, setExists] = React.useState(true);\n\n    const candidate = useSelector(state => state.candidate);\n\n    const handleSubmit = React.useCallback(async (value) => {\n\n        const res = await Candidate.search({ nick: value });\n\n        if (res.status === 200) {\n            setExists(true);\n            return navigate(`/candidate/${value}`);\n        }\n\n        return setExists(false)\n    }, [navigate]);\n\n    return (\n        <>\n            <Helmet>\n                <title>Home</title>\n            </Helmet>\n            <Container\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"100%\"\n                minHeight=\"calc(100vh - 64px)\"\n                sx={{\n                    '@media (min-device-width: 933px)': {\n                        backgroundImage: 'url(/assets/background.png)',\n                        backgroundSize: 'cover',\n                        backgroundRepeat: 'no-repeat'\n                    }\n                }}\n            >\n                <Grid item xs={10} sm={6} lg={4} p={4} boxShadow={4} bgcolor=\"background.paper\">\n                    <Emblem mb={4} />\n                    <Stack mb={6}>\n                        <StackIconButton\n                            button={!!candidate?.image}\n                            onClick={() => handleSubmit(candidate.nick)}\n                        >\n                            <Avatar\n                                src={!!candidate?.image ? candidate.image : '/icons/maskable_icon_x192.png'}\n                                alt='home'\n                                sx={{\n                                    bgcolor: 'primary.main',\n                                    width: 160,\n                                    height: 160,\n                                    boxShadow: 10,\n                                    m: 'auto'\n                                }}\n                            />\n                        </StackIconButton>\n                    </Stack>\n                    <Stack mb={1}>\n                        <InputField\n                            fullWidth\n                            value={candidate?.nick || '@'}\n                            error={!exists}\n                            onFocus={(e) => e.target.select()}\n                            transform={x => x.startsWith('@') ? x : `@${x}`}\n                            type=\"text\"\n                            autoComplete='off'\n                            label=\"Nickname\"\n                            variant='standard'\n                            placeholder='Encontre pelo nickname aqui'\n                            errorText=\"Perfil não localizado\"\n                            helperText={exists ? \"Localizar um perfil pelo nickname\" : \"Perfil não localizado\"}\n                            onSubmit={handleSubmit}\n                        />\n                    </Stack>\n                    <Stack width=\"auto\">\n                        <Button\n                            variant='contained'\n                            sx={{ ml: 'auto' }}\n                            onClick={() => navigate('/register')}>\n                            Criar o meu\n                        </Button>\n                    </Stack>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default Home;","// import { Request } from \"./Request\";\nimport Request from \"fx-request/lib/functions/HttpRequest\";\nimport SerializeQueryString from \"fx-request/lib/functions/SerializeQueryString\";\n\n/**\n * @typedef {import(\"@types/web/models\").Candidate } Candidate\n * @typedef {import(\"@types/web/models\").Job } Job\n * @typedef {import(\"@types/web/models\").Education } Education\n * @typedef {import(\"@types/web/models\").Skill } Skill\n * @typedef {import(\"@types/web/models\").Language } Language\n */\n\nconst Candidate = {\n    /**\n     * @param {Partial<Candidate>} data \n     */\n    search: (data) => Request('get', '/api/candidate?' + SerializeQueryString(data)),\n    get: () => Request('get', '/api/candidates'),\n    /**\n     * @param {RequiredKeys<Candidate>} data \n     */\n    create: (data) => Request('post', '/api/candidates', data),\n    /**\n    * @param {RequiredKeys<Candidate>} data \n    */\n    delete: (data) => Request('delete', '/api/candidates/' + data.uuid),\n    /**\n     * @param {string} uuid\n     * @param {RequiredKeys<Candidate>} data \n     */\n    update: (uuid, data) => Request('put', `/api/candidates/${uuid}`, data),\n    /** \n     * @param {Partial<Skill>} lib\n     */\n    libs: (lib) => ({\n        connect: (/**@type {string}*/ tag) => Request('post', `/api/skills/${encodeURIComponent(tag)}`, lib),\n        disconnect: () => Request('delete', `/api/skills/${encodeURIComponent(lib.tag)}`),\n    }),\n    /**\n     * @param {Partial<Job>} job\n     */\n    jobs: (job = {}) => ({\n        /**\n         * @param {RequiredKeys<Job>} data \n         */\n        create: (data) => Request('post', `/api/jobs/`, data),\n        /**\n         * @param {Partial<Job>} data \n         */\n        update: (data) => Request('put', `/api/jobs/${job.uuid}`, data),\n        delete: () => Request('delete', `/api/jobs/${job.uuid}`),\n        /** \n         * @param {Partial<Skill>} skill\n         */\n        skills: (skill) => ({\n            delete: () => Request('delete', `/api/skills/${encodeURIComponent(skill.tag)}`, { company: job.uuid }),\n            connect: (connect) => Request(connect ? 'post' : 'delete', `/api/skills`, { ...skill, company: job.uuid }),\n        })\n    }),\n    /**\n     * @param {Partial<Education>} education\n     */\n    educations: (education = {}) => ({\n        /**\n         * @param {RequiredKeys<Education>} data \n         */\n        create: (data) => Request('post', `/api/educations/`, data),\n        /**\n         * @param {Partial<Education>} data \n         */\n        update: (data) => Request('put', `/api/educations/${education.uuid}`, data),\n        delete: () => Request('delete', `/api/educations/${education.uuid}`),\n    }),\n    /**\n     * @param {Partial<Language>} language\n     */\n    languages: (language = {}) => ({\n        /**\n         * @param {RequiredKeys<Language>} data \n         */\n        create: (data) => Request('post', `/api/languages/`, data),\n        /**\n         * @param {Partial<Language>} data \n         */\n        update: (data) => Request('put', `/api/languages/${language.uuid}`, data),\n        delete: () => Request('delete', `/api/languages/${language.uuid}`),\n    })\n}\n\nexport default Candidate;"],"names":["Container","props","theme","useTheme","minHeight","React","toolbar","mixins","spacing","Number","window","innerHeight","parseInt","container","alignContent","justifyContent","width","height","boxSizing","md","button","style","margin","children","Emblem","Box","textAlign","Typography","variant","fontSize","letterSpacing","fontWeight","fontStyle","navigate","useNavigate","exists","setExists","candidate","useSelector","state","handleSubmit","value","Candidate","nick","status","Helmet","alignItems","sx","backgroundImage","backgroundSize","backgroundRepeat","Grid","item","xs","sm","lg","p","boxShadow","bgcolor","mb","Stack","StackIconButton","image","onClick","Avatar","src","alt","m","fullWidth","error","onFocus","e","target","select","transform","x","startsWith","type","autoComplete","label","placeholder","errorText","helperText","onSubmit","Button","ml","search","data","Request","SerializeQueryString","get","create","delete","uuid","update","libs","lib","connect","tag","encodeURIComponent","disconnect","jobs","job","skills","skill","company","educations","education","languages","language"],"sourceRoot":""}