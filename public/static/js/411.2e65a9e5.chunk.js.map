{"version":3,"file":"static/js/411.2e65a9e5.chunk.js","mappings":"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","sources":["components/Container/index.js","components/CardPanel/index.js","components/CircularProgressWithLabel/index.js","components/Div/index.js","pages/Candidate/perfil.js","services/Skill.js","pages/Candidate/skills.js","components/AutocompleteAsync/index.js","components/Subheader/index.js","components/Timeline/index.js","pages/Candidate/jobs.js","pages/Candidate/Education.js","pages/Candidate/language.js","pages/Candidate/skeleton.js","pages/Candidate/notfound.js","pages/Candidate/index.js","services/Candidate.js"],"sourcesContent":["import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { useTheme } from '@mui/material/styles';\n\n/** @type { React.FC<import('@mui/material/Grid').GridProps> } */\nconst Container = (props) => {\n    const theme = useTheme();\n    \n    const minHeight = React.useMemo(() => {\n        const toolbar = theme.mixins.toolbar.minHeight;\n        const spacing = theme.spacing(Number(props?.spacing || 0));\n        \n        return `calc(${window.innerHeight}px - ${parseInt(spacing) + toolbar}px)`;\n        \n    }, [theme, props.spacing])\n    \n    return (\n        <Grid\n            container\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            width=\"auto\"\n            height=\"auto\"\n            boxSizing=\"border-box\"\n            minHeight={{md:minHeight}}\n            {...props}\n        />\n    )\n}\n\nexport default React.memo(Container);","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActionArea from '@mui/material/CardActionArea';\n\n/**\n * @typedef {{\n *  button?: boolean\n *  actionArea?: boolean\n *  variant?: \"elevation\" | \"outlined\"\n *  fill?: boolean\n *  padding?: number\n *  sx: import('@mui/material').SxProps\n * }} Props\n * \n * @type {React.FC<\n *  Partial<import('@mui/material/CardHeader').CardHeaderProps> & \n *  Partial<import('@mui/material/CardActionArea').CardActionAreaProps> \n *  & Props\n * >} \n */\n\nconst CardPanel = ({ variant = 'elevation', button, actionArea, children, padding, fill = true, sx, ...props }) => {\n    return (\n        <Card\n            className=\"CardPanel\"\n            variant={variant}\n            sx={{\n                p: padding,\n                display: 'block',\n                width: '100%',\n                minHeight: fill && {\n                    md: 'calc(100vh - 84px)'\n                },\n                ...sx\n           }}\n        >\n            {button\n                ? <CardActionArea><CardHeader sx={{ p: 1, fontSize: '80%' }} {...props} /></CardActionArea>\n                : props?.title && <CardHeader sx={{ p: 1, fontSize: '80%' }} {...props} />}\n\n            {actionArea ? <CardActionArea {...props}>{children}</CardActionArea> : children}\n        </Card>\n    )\n}\n\nexport default CardPanel;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function CircularProgressWithLabel(props) {\n  return (\n    <Box sx={{ placeContent: \"center\", width: \"100%\", position: 'relative', boxSizing: 'border-box', display: 'inline-flex' }}>\n      <CircularProgress\n        {...props}\n        variant=\"determinate\"\n        value={props.value > 99 ? 99 : props.value}\n        size={60}\n      // sx={{ strokeLinecap: 'round' }} \n      />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Box textAlign={'center'}>\n          <Typography variant=\"subtitle2\" component=\"div\" fontSize={11} color=\"text.primary\">\n            {props.children}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport Box from '@mui/material/Box';\n\n/** @type { React.FC<import('@mui/material/Box').BoxProps & { show?: Boolean }> } */\nconst Div = ({ show = true, ...props }) => {\n\n    if (show !== true) {\n        return null\n    }\n\n    return (\n        <Box\n            display={\"flex\"}\n            alignContent={\"center\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            {...props}\n        />\n    )\n}\n\nexport default Div;","import React from 'react';\nimport Candidate from '../../services/Candidate';\n\nimport { useNavigate } from 'react-router-dom';\nimport { StyledListItem } from '../../components';\n\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport CardPanel from '../../components/CardPanel';\nimport { CardMembershipIcon, AccountCircleIcon, EmailIcon, AddCircleIcon, DeleteIcon, PlaceIcon, CalendarMonthIcon } from '../../components/Icons';\nimport { useMediaQuery } from 'usehooks-ts';\n\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\nconst Perfil = ({ candidate, permission }) => {\n    const navigate = useNavigate();\n    const print = useMediaQuery('print');\n\n    const update = React.useCallback((\n        /** @type {string} */ title,\n        /** @type {any}    */ input\n    ) => {\n        return window\n            .Prompt(title, [{ type: 'text', ...input }])\n            .then(data => Candidate\n                .update(candidate.uuid, data)\n                .then((res) => {\n                    switch (res.status) {\n                        case 200:\n                            if (input.name === 'nick') {\n                                navigate(`/candidate/${data.nick}`);\n                            }\n                            break;\n                        default:\n                            setTimeout(() => window.Alert(\"Nickname indisponível ou inválido\"), 400)\n                            break;\n                    }\n                })\n            )\n            .catch(() => console.log('ok'))\n\n    }, [candidate, navigate]);\n\n    const deleteCandidate = React.useCallback(() => {\n        window.Confirm(`Deseja excluir permanentemente o candidato ${candidate.nick}`)\n            .then(async () => {\n                const res = await Candidate.delete(candidate);\n                if (res.status === 200) {\n                    navigate('/home')\n                }\n            })\n            .catch(() => console.log('No delete'))\n    }, [candidate, navigate])\n\n\n    const candidateLinks = React.useMemo(() => {\n        try {\n            if (!candidate.links) {\n                return []\n            }\n\n            return Object.keys(candidate.links).map(e => ({\n                icon: candidate.links[e],\n                url: e,\n                host: new URL(e).host,\n                title: new URL(e).pathname\n            }))\n\n        } catch (error) {\n            return []\n\n        }\n    }, [candidate.links])\n\n    return (\n        <CardPanel\n            sx={{ mb: 2, pl: 2, '@media print': { m: 0, p: 0 } }}\n        >\n            <div className='print-flex-columns'>\n                <Box\n                    height={200}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    position=\"relative\"\n                    overflow=\"hidden\"\n                    sx={{\n                        '@media print': {\n                            width: 400,\n                            height: 300\n                        },\n                        '@media (max-device-width: 933px)': {\n                            backgroundImage: 'url(/assets/background.png)',\n                            backgroundSize: '100%',\n                            backgroundRepeat: 'no-repeat'\n                        }\n                    }}\n                >\n                    <Box\n                        sx={{\n                            textAlign: 'center'\n                        }}>\n                        <IconButton\n                            disabled={!permission}\n                            onClick={() => permission && update('Atualizar imagem de perfil', {\n                                label: 'Cole uma url valida',\n                                name: 'image',\n                                type: 'url'\n                            })}>\n                            <Avatar\n                                variant=\"rounded\"\n                                alt={candidate.name}\n                                src={candidate.image}\n                                sx={{\n                                    width: 106,\n                                    height: 106,\n                                    '@media print': {\n                                        width: 150,\n                                        height: 150,\n                                    }\n                                }}\n                            />\n                        </IconButton>\n                        <Typography p={2} textAlign=\"center\" color=\"WindowText\" fontWeight={666}>\n                            {permission &&\n                                <IconButton className=\"noprint\" onClick={deleteCandidate} color=\"default\" aria-label=\"delete-candidate\">\n                                    <Tooltip title=\"deletar cadastro\">\n                                        <DeleteIcon />\n                                    </Tooltip>\n                                </IconButton>\n                            }\n                            {candidate.name}\n                        </Typography>\n                    </Box>\n                </Box>\n                <List dense>\n                    <ListSubheader sx={{ mt: 2, mb: 2 }}><Typography>Perfil</Typography></ListSubheader>\n                    {permission && <>\n                        <StyledListItem\n                            className=\"noprint\"\n                            icon={!print && <Avatar variant='rounded'><CardMembershipIcon /></Avatar>}\n                            onClick={() => permission && update('Atualizar Nickname', {\n                                label: 'Informe o novo apelido, inicie com @',\n                                name: 'nick',\n                                initialValue: candidate.nick\n                            })}\n                            button={permission}\n                            primary={candidate.nick}\n                        />\n                        <StyledListItem\n                            className=\"noprint\"\n                            icon={!print && <Avatar variant='rounded'><AccountCircleIcon /></Avatar>}\n                            onClick={() => permission && update('Atualizar Nome', {\n                                label: 'Informe o novo Nome',\n                                name: 'name',\n                                initialValue: candidate.name\n                            })}\n                            button={permission}\n                            primary='Nome'\n                            secondary={candidate.name}\n                        />\n                    </>\n                    }\n                    <StyledListItem\n                        className={candidate.birthday ? '' : 'noprint'}\n                        icon={!print && <Avatar variant='rounded'><CalendarMonthIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar Idade', {\n                            label: 'Informe sua data de nascimento',\n                            name: 'birthday',\n                            type: 'date',\n                            initialValue: candidate.birthday?.Format('yyyy-mm-dd')\n                        })}\n                        button={permission}\n                        primary={'Idade'}\n                        secondary={candidate.birthday\n                            ? (candidate.birthday.toDate()?.DiffYears(new Date().toDate()).Round() + ' Anos')\n                            : 'Não informada'}\n                    />\n                    <StyledListItem\n                        icon={!print && <Avatar variant='rounded'><EmailIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar Email', {\n                            label: 'Informe o novo email',\n                            name: 'email',\n                            initialValue: candidate.email\n                        })}\n                        button={permission}\n                        primary='Email'\n                        secondary={candidate.email}\n                    />\n                    <StyledListItem\n                        className={candidate.addressLine ? '' : 'noprint'}\n                        icon={!print && <Avatar variant='rounded'><PlaceIcon /></Avatar>}\n                        onClick={() => permission && update('Atualizar linha de endereço', {\n                            label: 'Informe apenas cidade, estado / UF',\n                            name: 'addressLine',\n                            initialValue: candidate.addressLine\n                        })}\n                        button={permission}\n                        primary='Endereço'\n                        secondary={candidate.addressLine}\n                    />\n                </List>\n                <List\n                    className={candidateLinks?.length > 0 ? '' : 'noprint'}\n                    dense\n                    component=\"div\">\n                    <ListSubheader component=\"div\" sx={{ mt: 2, mb: 2 }}><Typography>Social</Typography></ListSubheader>\n                    {candidateLinks.map(link =>\n                        <StyledListItem\n                            button\n                            onClick={() => window.open(link.url)}\n                            key={link.url}\n                            icon={<Avatar variant=\"rounded\" alt={link.title} src={link.icon} sx={{ p: 1 }} />}\n                            primary={link.title}\n                            secondary={link.host}\n                            actions={permission &&\n                                <IconButton className='noprint' onClick={() => {\n                                    delete candidate.links[link.url];\n                                    return Candidate.update(candidate.uuid, { links: candidate.links });\n                                }}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            }\n                        />\n                    )}\n                    {permission &&\n                        <StyledListItem\n                            button\n                            className='noprint'\n                            icon={<Avatar variant='rounded'><AddCircleIcon /></Avatar>}\n                            primary='Adicionar links'\n                            onClick={() => permission && window\n                                .Prompt('Incluír link externo', [{\n                                    label: `Url ex: https://github.com/${candidate.nick}`,\n                                    name: 'link',\n                                    type: 'url'\n                                }])\n                                .then(data => Candidate.update(candidate.uuid, { link: data.link, links: candidate.links }))\n                                .catch(() => console.log('ok'))\n                            }\n                        />\n                    }\n                </List>\n            </div>\n            <List dense sx={{\n                '@media print': {\n                    mt: -3\n                }\n            }}>\n                <StyledListItem\n                    onClick={() => permission && update('Sobre Mim', {\n                        label: 'Digite sua biografia',\n                        name: 'about',\n                        initialValue: candidate.about,\n                        multiline: true,\n                        rows: 9\n                    })}\n                    button={permission}\n                    primary=\"Biografia\"\n                    secondary={\n                        <Typography\n                            variant='caption'\n                            component='pre'\n                            sx={{\n                                whiteSpace: 'pre-wrap'\n                            }}>\n                            {candidate.about || \"não informada ...\"}\n                        </Typography>}\n                />\n            </List>\n        </CardPanel>)\n}\n\nexport default Perfil;","import Request from \"fx-request/lib/functions/HttpRequest\";\n\n/**\n * @typedef {import(\"@types/web/models\").Skill} Skill\n * @typedef {import(\"@types/web/models\").Question} Question\n */\n\nconst Skill = {\n    get: (q) => Request('get', `/api/skills?q=${q}`),\n    /** \n     * @param {Partial<Skill>} skill\n     * @param {Partial<Skill>} data\n     */\n    update: (skill, data) => Request('put', `/api/skills/${encodeURIComponent(skill.tag)}`, data),\n    /** \n     * @param {string} skilluuid \n     */\n    question: (skilluuid) => ({\n        /**\n         * @param {RequiredKeys<Question>} data \n         */\n        create: (data) => Request('post', `/api/question/${skilluuid}`, data)\n    }),\n    /** \n     * @param {Partial<Skill>} skill\n     */\n    libs: (skill) => ({\n        /** \n         * @param {Partial<Skill[]>} libs\n         */\n        filter: (libs) => libs.filter(lib => skill.tag + lib.title.replace(/[^\\w#&*]/g, '').toLocaleLowerCase() === lib.tag),\n        get: (q) => Request('get', `/api/skills/${encodeURIComponent(skill.tag)}?q=${q}`),\n        /** \n         * @param {string} libuuid \n         */\n        question: (libuuid) => ({\n            /**\n             * @param {RequiredKeys<Question>} data \n             */\n            create: (data) => Request('post', `/api/question/${libuuid}`, data)\n        }),\n    })\n}\n\nexport default Skill;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport Skill from '../../services/Skill';\nimport Candidate from '../../services/Candidate';\nimport { Div, CardPanel, CircularProgressWithLabel } from '../../components';\nimport Tooltip from '@mui/material/Tooltip';\nimport Gestures from 'react-indiana-drag-scroll';\n\nfunction calcDate(date1, date2) {\n  const past_date = new Date(date1);\n  const current_date = date2 ? new Date(date2) : new Date();\n\n  const diff = Math.floor(current_date.getTime() - past_date.getTime());\n  const day = 1000 * 60 * 60 * 24;\n\n  const days = Math.ceil(diff / day);\n  const months = Math.ceil(days / 31);\n  const years = Math.ceil(months / 12);\n\n  return { days, months, years };\n}\n\n/**\n *  @type {React.FC<{\n    *  user: import('@types/web/models').User, \n    *  candidate: import('@types/web/models').Candidate, \n    *  permission: any\n * }>} \n */\nconst Skills = ({ candidate, permission, user }) => {\n  const [tags, setTags] = React.useState([]);\n\n  const setTag = React.useCallback((/**@type {number} */ tag) => {\n    setTags(tags.Has(tag) ? tags.filter(x => x !== tag) : [...tags, tag])\n\n  }, [tags])\n\n  const [liblist, setLiblist] = React.useState([]);\n\n  const libs = React.useCallback((skill) => {\n    return Skill.libs(skill).filter(candidate.libs)\n\n  }, [candidate])\n\n  /**\n   * @type { Array<Skill & { points: number, years: number, begin: Date, finish: Date }> }\n   */\n  const skills = React.useMemo(() => {\n    const sk = {};\n    for (const job of candidate.jobs) {\n      for (const skill of job.skills) {\n        if (!sk[skill.tag])\n          sk[skill.tag] = {\n            ...skill,\n            points: 0,\n            years: 0,\n            begin: job.begin,\n            finish: job.finish || new Date()\n          }\n\n        if (new Date(sk[skill.tag].begin) > new Date(job.begin)) {\n          sk[skill.tag].begin = job.begin;\n        }\n\n        if (new Date(sk[skill.tag].finish) < new Date(job.finish)) {\n          sk[skill.tag].finish = job.finish;\n        }\n\n        const { months, years } = calcDate(sk[skill.tag].begin, sk[skill.tag].finish);\n\n        if (sk[skill.tag].years < years) {\n          sk[skill.tag].years = years;\n        }\n\n        sk[skill.tag].points += months; // each month increment one point \n        sk[skill.tag].points += libs(skill).length; // increment by number of jobs with this skill\n      }\n    }\n\n    return Object\n      .values(sk)\n      .sort((a, b) => b.points - a.points)\n      .filter(skill => permission ? true : skill.points > 12);\n\n  }, [candidate, libs, permission]);\n\n  const handleUpdateSkill = React.useCallback((skill) => {\n    window.Prompt('Atualizar imagem da skill', [\n      { label: `Define um link url para imagem de ${skill.title}`, name: 'image', type: 'url', initialValue: skill.image }\n    ])\n      .then(({ image }) => {\n        if (image && image !== skill.image) {\n          Skill.update(skill, { image });\n        }\n      })\n  }, []);\n\n  const handleConnectSkill = React.useCallback((skill) => {\n    Skill.libs(skill).get('*')\n      .then((response) => {\n        const newLibList = response.data.filter(x => !candidate.libs.Has({ tag: x.tag })).sort((a, b) => a.title.localeCompare(b.title))\n        setLiblist(newLibList);\n\n        window.Prompt(`Habilidades sobre a skill ${skill.title}`, [\n          { label: `Informar uma lib`, name: 'title', type: 'text', inputProps: { list: 'libs', autoComplete: 'off' } }\n        ])\n          .then(({ title }) => {\n            if (title) {\n              Candidate.libs({ title }).connect(skill.tag)\n            }\n          })\n          .finally(() => setLiblist([]))\n      })\n\n  }, [candidate])\n\n  const getChipProps = React.useCallback((lib) => {\n    return !permission ? {} : {\n      onDelete: () => Candidate.libs(lib).disconnect()\n    }\n  }, [permission])\n\n  return (\n    <CardPanel\n      titleTypographyProps={{ variant: 'caption' }}\n      fill={false}\n      sx={{ mb: 2, pl: 2, pr: 2, '@media print': { m: 0, p: 0 } }}\n    >\n      <datalist id=\"libs\">\n        {liblist.map(lib => <option key={lib.tag} value={lib.title} />)}\n      </datalist>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <ListSubheader component=\"div\" className=\"notranslate\">Conhecimentos</ListSubheader>\n        </Grid>\n        <Gestures activationDistance={20}>\n          <Grid container\n            className=\"printpadding\"\n            flexWrap=\"nowrap\" sx={{\n              cursor: 'move',\n              p: \"0 12px\",\n              '@media print': {\n                // p: 6\n              }\n            }}>\n            {skills.map((skill) =>\n              <Grid item className=\"printpadding\" key={skill.uuid} p=\"0 9px\">\n                <Div flexDirection=\"column\" sx={{ opacity: skill.points <= 12 && 0.5, userSelect: 'none' }}>\n                  <CircularProgressWithLabel\n                    variant=\"determinate\"\n                    value={parseInt(Number(skill.points).Percent(160, 2))}\n                  >\n                    <IconButton\n                      size='small'\n                      onClick={() => permission ? handleConnectSkill(skill) : setTag(skill.tag)}\n                    >\n                      <Tooltip\n                        placement='right-start'\n                        title={skill.points <= 12 ? \"Pontuação mínima não atingida\" : `${skill.points}pts`}>\n                        <Avatar\n                          className=\"notranslate\"\n                          sx={{ width: 38, height: 38, userSelect: 'none' }}\n                          alt={skill.title}\n                          src={skill.image}>\n                          {skill.title}\n                        </Avatar>\n                      </Tooltip>\n                    </IconButton>\n                  </CircularProgressWithLabel>\n                  <Typography noWrap mt={1} fontWeight={550} fontSize={8} letterSpacing={0} align='center' variant='h2'>{skill.title}</Typography>\n                  <Typography\n                    sx={user?.super && {\n                      textDecoration: \"underline\",\n                      cursor: 'pointer',\n                      '@media print': {\n                        textDecoration: \"none\",\n                      }\n                    }}\n                    onClick={() => user?.super && handleUpdateSkill(skill)}\n                    paragraph\n                    variant=\"caption\"\n                    textAlign=\"center\"\n                    fontSize={9}>\n                    {skill.years} anos\n                  </Typography>\n                </Div>\n              </Grid>\n            )}\n          </Grid>\n        </Gestures>\n        {candidate.libs.length > 0 &&\n          <Grid item xs={12} className=\"printpadding\">\n            <ListSubheader component=\"div\" className=\"notranslate noprint\">\n              Skill's\n            </ListSubheader>\n            <Div justifyContent=\"flex-start\" flexWrap={\"wrap\"} p={1.2}>\n              {skills\n                .map(skill => Skill\n                  .libs(skill).filter(candidate.libs)\n                  .filter(() => tags.length === 0 ? true : tags.some(tag => skill.tag === tag))\n                  .map(lib =>\n                    <Chip\n                      className=\"notranslate\"\n                      key={lib.uuid}\n                      variant=\"outlined\"\n                      avatar={<Avatar alt={skill.title} src={skill.image} />}\n                      label={lib.title}\n                      size=\"small\"\n                      sx={{ mr: 1, mb: 1 }}\n                      {...getChipProps(lib)}\n                    />\n                  )\n                )}\n              {tags.length > 0 &&\n                <i\n                  className='noprint'\n                  onClick={() => setTags([])}\n                  style={{\n                    display: 'block',\n                    marginLeft: 'auto',\n                    fontSize: 12,\n                    textDecoration: 'underline',\n                    cursor: 'pointer'\n                  }}>\n                  Limpar seleção\n                </i>\n              }\n            </Div>\n          </Grid>\n        }\n      </Grid>\n    </CardPanel>\n  )\n}\n\nexport default Skills;","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useDebounce } from 'usehooks-ts';\n\n/**\n * \n * @type { <DefaultValue extends any>(props: Partial<import('@mui/material').AutocompleteProps> & {\n *  Service(value: DefaultValue): Promise<any> \n *  OnSet(value: DefaultValue): any\n *  OptionLabel: string\n *  label?: string\n *  placeholder?: any\n *  variant?: any\n *  allowCreate?: boolean \n *  disableUnderline?: boolean\n *  clearOnSet?: boolean\n *  helperText?: string\n *  defaultValue?: DefaultValue\n * }) => JSX.Element } props\n */\nconst AutocompleteAsynchronous = ({\n  Service,\n  OnSet,\n  OptionLabel,\n  allowCreate = true,\n  clearOnSet,\n  variant,\n  label,\n  placeholder,\n  size = 'small',\n  disableUnderline = undefined,\n  ...props }) => {\n  const [options, setOptions] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(props.defaultValue);\n\n  const handleChange = (_, data) => {\n    if(clearOnSet){\n      setInputValue('');\n    }\n    if(OnSet) {\n      OnSet(data);\n    }\n  }\n\n  const debouncedValue = useDebounce(inputValue, 1000);\n\n  const fetcher = () => {\n    setOptions([]);\n    setLoading(true);\n    Service(inputValue)\n    .then((response) => {\n      if(response.status === 200)\n      setOptions([...response.data])\n    })\n    .catch(() => setOptions([]))\n    .finally(() => {\n      setLoading(false);\n      });\n  }\n  \n  React.useEffect(() => {\n    if (!!debouncedValue) {\n      fetcher();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedValue]);\n\n  const autocompleteProps = {};\n\n  if(disableUnderline){\n    autocompleteProps['disableUnderline'] = true;\n  }\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      autoHighlight\n      freeSolo\n      // value={inputValue}\n      isOptionEqualToValue={(option, value) => option[OptionLabel] === value[OptionLabel]}\n      getOptionLabel={x => x[OptionLabel]}\n      sx={{\n        '& label': {\n          fontSize: (theme) =>\n            theme.typography.caption.fontSize\n        },\n        '& input': {\n          fontSize: (theme) =>\n            theme.typography.caption.fontSize\n        }\n      }}\n      options={options}\n      onChange={handleChange}\n      onInputChange={(e) => setInputValue(e.currentTarget?.value)}\n      loading={loading}\n      size={size}\n      renderOption={(props, option, { selected }) => (\n        <ListItem dense selected={selected} {...props}>\n          <ListItemText\n            primaryTypographyProps={{\n              variant: 'caption'\n            }}\n            primary={option[OptionLabel]}\n            secondaryTypographyProps={{\n              variant: 'caption',\n              fontSize: 12\n            }}\n            secondary={option?.isNew && 'Adicionar novo'}\n          />\n        </ListItem>\n      )}\n      filterOptions={(defopts, params) => {\n        const inputValue = params.inputValue;\n        if (allowCreate) {\n          let isExisting = 2;\n          if (defopts.length > 0) {\n            isExisting = defopts?.Search(inputValue)?.length || 0;\n          }\n\n          if (!loading && inputValue !== '' && isExisting !== 1) {\n            defopts.unshift({\n              isNew: true,\n              [OptionLabel]: inputValue\n            });\n          }\n        }\n\n        return defopts;\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          disabled={loading}\n          onFocus={({target}) => target.select()}\n          variant={variant}\n          placeholder={placeholder}\n          label={label}\n          InputProps={{\n            ...params.InputProps,\n            ...autocompleteProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport default React.memo(AutocompleteAsynchronous);","import React from \"react\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nconst Subheader = ({ component = \"h1\", title, action, icon, children, ...props }) => {\n    return (\n        <ListSubheader component={component} sx={{m:0}}>\n            {children}\n            {action && (\n                <Tooltip title={title}>\n                    <IconButton sx={{ float: 'right' }} className=\"noprint\" {...props}>\n                        {icon}\n                    </IconButton>\n                </Tooltip>\n            )}\n        </ListSubheader>\n    )\n}\n\nexport default Subheader;","import React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineDot from '@mui/lab/TimelineDot';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineOppositeContent from '@mui/lab/TimelineOppositeContent';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport { useMediaQuery } from 'usehooks-ts';\nimport Subheader from '../Subheader';\n\n\nconst OppositeComponent = (props) => {\n    return props.begin && (\n        <Typography variant=\"caption\" fontSize={12} display=\"block\" sx={{ '@media print': { width: 80 } }}>\n            <i>{new Date(props.begin).Format('mm/yyyy')} até {props.finish ? new Date(props.finish).Format('mm/yyyy') : 'Atual'}</i>\n        </Typography>\n    )\n}\n\n\nconst TimeLine = ({\n    list = [],\n    children: Children,\n    actions: Actions,\n    icon,\n    primaryText,\n    secondaryText,\n    first,\n    title,\n    collapsed = [0],\n    ...props\n}) => {\n    const [collapse, setCollapse] = React.useState(collapsed);\n    const print = useMediaQuery('print');\n\n    return (<>\n        <Subheader>{title}</Subheader>\n        <Timeline {...props}>\n            {!!first &&\n                <TimelineItem className='noprint'>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0 }} />\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        {first}\n                    </TimelineContent>\n                </TimelineItem>}\n            {list.length === 0 &&\n                <TimelineItem className='noprint' sx={{opacity: 0.5}}>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0 }} />\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        <TimelineConnector />\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <List\n                            component=\"div\"\n                            dense\n                            disablePadding\n                            sx={{ borderRadius: 2, ml: -1, mt: -2 }}\n                        >\n                            <ListItem component=\"div\" >\n                                <ListItemText\n                                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                                    primary={<>\n                                        <b>Não informado</b>\n                                    </>}\n                                    secondaryTypographyProps={{ variant: 'caption', color: 'primary' }}\n                                    secondary=\"Adicione alguns items na sua linha do tempo\"\n                                />\n                            </ListItem>\n                        </List>\n                    </TimelineContent>\n                </TimelineItem>\n            }\n            {list.map((item, i) =>\n                <TimelineItem key={item.uuid + '-' + i}>\n                    <TimelineOppositeContent sx={{ p: 0, flex: 0, mt: 0, '@media print': { pr: 2 } }}>\n                        {print && <OppositeComponent {...item} />}\n                    </TimelineOppositeContent>\n                    <TimelineSeparator>\n                        {icon\n                            ? <Avatar src={item.image} alt={item[secondaryText]}>{icon}</Avatar>\n                            : <TimelineDot color=\"primary\" />\n                        }\n                        {i + 1 < list.length && <TimelineConnector />}\n                    </TimelineSeparator>\n                    <TimelineContent mb={2}>\n                        <List\n                            component=\"div\"\n                            dense\n                            disablePadding\n                            sx={{ borderRadius: 2, ml: -1, mt: item[secondaryText] ? -3 : -2, '@media print': { mt: -2 } }}\n                        >\n                            <ListItem\n                                component=\"div\"\n                                button={!!Children}\n                                onClick={() => setCollapse([i])}>\n                                <ListItemText\n                                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                                    primary={<>\n                                        {!print && <OppositeComponent {...item} />}\n                                        <b>{item[primaryText]}</b>\n                                    </>}\n                                    secondaryTypographyProps={{ variant: 'caption', color: 'primary' }}\n                                    secondary={item[secondaryText]}\n                                />\n                                {Actions && <Actions {...item} />}\n                            </ListItem>\n                        </List>\n                        {!!Children &&\n                            <Collapse in={collapse.includes(i) || print}>\n                                <Children {...item} />\n                            </Collapse>\n                        }\n                    </TimelineContent>\n                </TimelineItem>\n            )}\n        </Timeline>\n    </>)\n}\n\nexport default TimeLine;","import React from 'react';\n\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\n\nimport Chip from '@mui/material/Chip';\nimport Candidate from '../../services/Candidate';\nimport { BusinessIcon, DeleteIcon, EditIcon } from '../../components/Icons';\nimport AutocompleteAsynchronous from '../../components/AutocompleteAsync';\nimport Skill from '../../services/Skill';\nimport CardPanel from '../../components/CardPanel';\nimport TimeLine from '../../components/Timeline';\n\nconst inputs = {\n  occupation: { label: 'Cargo/Função/Projeto', name: 'occupation', type: 'text' },\n  begin: { label: 'Data inicio', name: 'begin', type: 'date' },\n  company: { label: 'Empresa/Instituição', name: 'company', type: 'text', optional: true },\n  finish: { label: 'Data Término', name: 'finish', type: 'date', optional: true },\n  description: { label: 'Descrição das atividades', name: 'description', multiline: true, rows: 4 },\n  site: { label: 'Site', name: 'site', type: 'url', optional: true }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Jobs = ({ candidate, permission }) => {\n\n\n  const handleCreateJob = () => window.Prompt('Cadastrar Job', [\n    inputs.occupation,\n    inputs.begin,\n    inputs.company,\n    inputs.finish,\n    inputs.description\n  ]).then(Candidate.jobs().create);\n\n  const handleUpdateJob = React.useCallback(\n    (job) => window.Prompt('Editar job', [\n      { ...inputs.occupation, initialValue: job.occupation },\n      { ...inputs.company, initialValue: job.company },\n      { ...inputs.description, initialValue: job.description },\n      { ...inputs.begin, initialValue: job.begin?.Format('yyyy-mm-dd') || null },\n      { ...inputs.finish, initialValue: job.finish?.Format('yyyy-mm-dd') || null },\n      { ...inputs.site, initialValue: job.site || null },\n    ])\n      .then(Candidate.jobs(job).update), []);\n\n  const handleDeleteJob = React.useCallback(\n    (job) => window.Confirm(`Confirma a exclusão de ${job.company}?`).then(Candidate.jobs(job).delete), []\n  );\n\n  const handleConnectSkill = React.useCallback((job, skill) => {\n    if (skill?.title) {\n      return Candidate.jobs(job).skills(skill).connect(true);\n    }\n\n  }, []);\n\n  const getChipProps = React.useCallback((job, skill) => {\n    return !permission ? {} : {\n      onDelete: () => Candidate.jobs(job).skills(skill).connect(false)\n    }\n  }, [permission])\n\n  return (\n    <CardPanel\n      titleTypographyProps={{ variant: 'caption' }}\n      fill={false}\n      sx={{ \n        mb: 2,\n        pl: 2,\n        '@media print': { \n          m: 0, \n          p: 0\n        }\n      }}\n    >\n      <TimeLine\n        title=\"Experiências\"\n        icon={<BusinessIcon fontSize=\"small\" />}\n        list={candidate.jobs.sort((x, y) => new Date(y.begin).getTime() - new Date(x.begin).getTime())}\n        primaryText=\"occupation\"\n        secondaryText=\"company\"\n        first={permission &&\n          <ListItem\n            onClick={handleCreateJob}\n            dense\n            button\n            component=\"div\"\n            sx={{ borderRadius: 2, ml: -1, mt: -1 }}>\n            <ListItemText\n              component=\"div\"\n              primaryTypographyProps={{ variant: 'subtitle2' }}\n              primary=\"Adicionar experiência\"\n            />\n          </ListItem>\n        }\n        actions={(job) => permission && (\n          <ListItemSecondaryAction>\n            <Tooltip title=\"Editar Job\">\n              <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateJob(job)}>\n                <EditIcon color=\"primary\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Excluir Job\">\n              <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteJob(job)}>\n                <DeleteIcon color=\"warning\" />\n              </IconButton>\n            </Tooltip>\n          </ListItemSecondaryAction>\n        )}\n      >\n        {(job) => (\n          <Box pl={1}>\n            {job.site &&\n              <Link href={job.site} target=\"_blank\" underline=\"none\">\n                <Typography gutterBottom display=\"block\" variant=\"caption\">\n                  {job.site}\n                </Typography>\n              </Link>\n            }\n            <Typography gutterBottom display=\"block\" variant=\"caption\">\n              {job.description}\n            </Typography>\n            <Typography gutterBottom display=\"block\" variant=\"caption\">\n              Conhecimentos\n            </Typography>\n            <Box width=\"100%\" pt={2}>\n              {job.skills.map(skill =>\n                <Chip\n                  avatar={<Avatar alt={skill.title} src={skill.image} />}\n                  className=\"notranslate\"\n                  key={skill.uuid}\n                  label={skill.title}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ mr: 1, mb: 1 }}\n                  {...getChipProps(job, skill)}\n                />\n              )}\n            </Box>\n            {/* <Box hidden={!permission} width=\"100%\" pt={2}>\n            <AutocompleteAsynchronous\n              disableUnderline\n              disableClearable\n              allowCreate={false}\n              OptionLabel=\"formattedAddress\"\n              value={job?.location}\n              placeholder=\"Pesquisar endereço\"\n              label=\"Localização\"\n              variant=\"standard\"\n              Service={(e) => Maps.geocode(e)}\n              OnSet={console.log}\n            /></Box> */}\n            <Box hidden={!permission} width=\"100%\" pt={2}>\n              <AutocompleteAsynchronous\n                className=\"notranslate noprint\"\n                clearOnSet\n                OptionLabel='title'\n                label=\"Nova skill\"\n                Service={(e) => Skill.get(e)}\n                OnSet={data => handleConnectSkill(job, data)}\n              />\n            </Box>\n          </Box>\n        )}\n      </TimeLine>\n    </CardPanel >\n  )\n}\n\nexport default Jobs;\n","import React from \"react\";\nimport { CardPanel } from \"../../components\";\nimport TimeLine from \"../../components/Timeline\";\n\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport { DeleteIcon, EditIcon, SchoolIcon } from \"../../components/Icons\";\nimport Candidate from \"../../services/Candidate\";\n\nconst inputs = {\n    begin: { label: 'Data inicio', name: 'begin', type: 'date' },\n    course: { label: 'Curso/Aprendizado', name: 'course', type: 'text' },\n    institution: { label: 'Instituição', name: 'institution', type: 'text', optional: true },\n    finish: { label: 'Data Término', name: 'finish', type: 'date', optional: true },\n    site: { label: 'Site', name: 'site', type: 'url', optional: true }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Education = ({ candidate, permission }) => {\n\n    const handleCreateEducation = React.useCallback(() => {\n        window.Prompt('Cadastrar Estudo', [\n            inputs.begin,\n            inputs.course,\n            inputs.institution,\n            inputs.finish\n        ])\n            .then(Candidate.educations().create);\n    }, [])\n\n    const handleUpdateEducation = React.useCallback(\n        (education) => window.Prompt('Editar Estudo', [\n            { ...inputs.begin, initialValue: education.begin?.Format('yyyy-mm-dd') || null },\n            { ...inputs.course, initialValue: education.course },\n            { ...inputs.institution, initialValue: education.institution },\n            { ...inputs.finish, initialValue: education.finish?.Format('yyyy-mm-dd') || null },\n            { ...inputs.site, initialValue: education.site || null },\n        ])\n            .then(Candidate.educations(education).update), []);\n\n    const handleDeleteEducation = React.useCallback(\n        (education) => window.Confirm(`Confirma a exclusão de ${education.company}?`).then(Candidate.educations(education).delete), []\n    );\n\n    return (\n        <CardPanel\n            titleTypographyProps={{ variant: 'caption' }}\n            fill={false}\n            sx={{ pl: 2, display: 'block', '@media print': { m: 0, p: 0, width: '65%', float: 'left' } }}\n        >\n            <TimeLine\n                icon={<SchoolIcon fontSize=\"small\" />}\n                title=\"Estudos/Aprendizados\"\n                list={(candidate?.educations || []).sort((x, y) => new Date(y.begin).getTime() - new Date(x.begin).getTime())}\n                primaryText=\"course\"\n                secondaryText=\"institution\"\n                first={permission &&\n                    <ListItem\n                        onClick={handleCreateEducation}\n                        dense\n                        button\n                        component=\"div\"\n                        sx={{ borderRadius: 2, ml: -1, mt: -1 }}>\n                        <ListItemText\n                            component=\"div\"\n                            primaryTypographyProps={{ variant: 'subtitle2' }}\n                            primary=\"Adicionar Estudo\"\n                        />\n                    </ListItem>\n                }\n                actions={(course) => permission && (\n                    <ListItemSecondaryAction>\n                        <Tooltip title=\"Editar Estudo\">\n                            <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateEducation(course)}>\n                                <EditIcon color=\"primary\" />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Excluir Estudo\">\n                            <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteEducation(course)}>\n                                <DeleteIcon color=\"warning\" />\n                            </IconButton>\n                        </Tooltip>\n                    </ListItemSecondaryAction>\n                )}\n            />\n        </CardPanel >\n    )\n}\n\nexport default Education;","import React from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport Candidate from \"../../services/Candidate\";\nimport { AddCircleIcon, DeleteIcon, EditIcon, LanguageIcon, RadioButtonCheckedIcon, RadioButtonUncheckedIcon } from \"../../components/Icons\";\nimport { CardPanel } from \"../../components\";\n\nconst inputs = {\n    title: { label: 'Língua', name: 'title', type: 'text' },\n    level: { label: 'Level', name: 'level', type: 'text' }\n}\n\n/**\n *  @type {React.FC<{\n *  user: import('@types/web/models').User, \n *  candidate: import('@types/web/models').Candidate, \n *  permission: any\n* }>} \n*/\n\nconst Language = ({ candidate, permission }) => {\n\n    const handleCreateLanguages = React.useCallback(() => {\n        window.Prompt('Cadastrar Idioma', [\n            inputs.title\n        ])\n            .then(Candidate.languages().create);\n    }, [])\n\n    const handleUpdateLanguages = React.useCallback(\n        (language) => window.Prompt('Editar Idioma', [\n            { ...inputs.title, initialValue: language.title }\n        ])\n            .then(Candidate.languages(language).update), []);\n\n    const getStarRate = React.useCallback((rate) => {\n        switch (rate) {\n            case 1: return 'Nenhuma';\n            case 2: return 'Básico';\n            case 3: return 'Intermediário';\n            case 4: return 'Avançado';\n            case 5: return 'Fluente';\n            default: return '';\n        }\n    }, [])\n\n    const handleDeleteLanguages = React.useCallback(\n        (language) => window.Confirm(`Confirma a exclusão de ${language.title}?`).then(Candidate.languages(language).delete), []\n    );\n\n    return (\n        <CardPanel\n            fill={false}\n            sx={{ mb: 2, pb: 2, pl: 2, '@media print': { width: '35%', float: 'right', height: '100%', mr: 8 } }}\n        >\n            <List\n                dense\n                subheader={\n                    <ListSubheader>\n                        Idiomas\n                        {permission && (\n                            <IconButton sx={{ float: 'right' }} className=\"noprint\" onClick={handleCreateLanguages}>\n                                <AddCircleIcon />\n                            </IconButton>\n                        )}\n                    </ListSubheader>}\n            >\n\n                {(candidate?.languages || []).map((language) => (\n                    <ListItem dense key={language.uuid}>\n                        <ListItemIcon className=\"noprint\"><Avatar><LanguageIcon fontSize=\"small\" /></Avatar></ListItemIcon>\n                        <ListItemText\n                            primary={language.title}\n                        />\n                        <ListItemSecondaryAction>\n                            {(!permission && language.level > 5)\n                                ? <Typography color=\"primary\" variant=\"caption\"><i style={{fontWeight: 650}}>Nativo</i></Typography>\n                                : [1, 2, 3, 4, 5].map((lv) =>\n                                    <Tooltip title={getStarRate(lv)} key={`start-${lv}`}>\n                                        <IconButton\n                                            onClick={() => permission && Candidate.languages(language).update({ level: lv })}\n                                            size=\"small\"\n                                            sx={{ mr: -1.3 }}>\n                                            {language.level >= lv\n                                                ? <RadioButtonCheckedIcon color=\"primary\" fontSize=\"small\" />\n                                                : <RadioButtonUncheckedIcon color=\"primary\" fontSize=\"small\" />\n                                            }\n                                        </IconButton>\n                                    </Tooltip>\n                                )\n                            }\n\n                            {permission && (\n                                <>\n                                    <Tooltip title=\"Nativo\">\n                                        <IconButton\n                                            className=\"noprint\"\n                                            onClick={() => permission && Candidate.languages(language).update({ level: 6 })}\n                                            size=\"small\">\n                                            {language.level > 5\n                                                ? <RadioButtonCheckedIcon  />\n                                                : <RadioButtonUncheckedIcon />\n                                            }\n                                        </IconButton>\n                                    </Tooltip>\n\n                                    <Tooltip title=\"Editar Idioma\">\n                                        <IconButton className='noprint' size=\"small\" onClick={() => handleUpdateLanguages(language)}>\n                                            <EditIcon color=\"primary\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip title=\"Excluir Idioma\">\n                                        <IconButton className='noprint' size=\"small\" onClick={() => handleDeleteLanguages(language)}>\n                                            <DeleteIcon color=\"warning\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </>\n                            )}\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))\n                }\n            </List>\n        </CardPanel >\n    )\n}\n\nexport default Language;","import React from \"react\";\nimport Skeleton from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport { Container, StyledListItem, CardPanel } from '../../components';\n\nconst PageSkeleton = () => {\n   return (\n      <Container spacing={1} p={1} alignContent=\"flex-start\">\n         <Grid item xs={12} sm={4} lg={3}>\n            <CardPanel sx={{ mb: 2, pl: 2 }}>\n               <Box\n                  height={200}\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  position=\"relative\"\n                  overflow=\"hidden\"\n               >\n                  <Box sx={{ textAlign: 'center' }}>\n                     <Skeleton variant=\"rectangular\" width={120} height={120} />\n                     <Typography p={2} textAlign=\"center\" color=\"WindowText\" fontWeight={666}>\n                        <Skeleton variant=\"text\" />\n                     </Typography>\n                  </Box>\n               </Box>\n               {Array.from({ length: 2 }).map((_, x) =>\n                  <List dense key={`perfil-${x}`}>\n                     <ListSubheader sx={{ mt: 2, mb: 2 }}>\n                        <Typography> <Skeleton width={75} variant=\"text\" /></Typography>\n                     </ListSubheader>\n                     {[0, 1, 2].map((_, y) =>\n                        <StyledListItem\n                           key={`perfil-${x}-${y}`}\n                           icon={<Skeleton variant=\"rectangular\" width={40} height={40} />}\n                           primary={<Skeleton width={100} variant=\"text\" />}\n                           secondary={<Skeleton width={150} variant=\"text\" />}\n                        />\n                     )}\n                  </List>\n\n               )}\n            </CardPanel>\n         </Grid>\n         <Grid item xs={12} sm={8} lg={9} sx={{ minHeight: '60vh' }}>\n            <Grid container spacing={1}>\n               <Grid item xs={12} lg={12}>\n                  <CardPanel\n                     fill={false}\n                     sx={{ mb: 2, pl: 2, pr: 2 }}\n                  >\n                     <Grid container spacing={1}>\n                        <Grid item xs={12} m={2}>\n                           <Skeleton height={20} width={100} variant=\"text\" />\n                        </Grid>\n                        <Grid container flexWrap=\"nowrap\" sx={{ p: \"0 12px\" }}>\n                           {Array.from({ length: 8 }).map((_, x) =>\n                              <Grid item key={`skills-${x}`} p=\"0 8px\" >\n                                 <Box flexDirection=\"column\">\n                                    <Skeleton variant=\"circular\" width={70} height={70} />\n                                    <Skeleton height={20} variant=\"text\" />\n                                    <Skeleton height={12} variant=\"text\" />\n                                 </Box>\n                              </Grid>\n                           )}\n                        </Grid>\n                        <Grid item xs={12}>\n                           <Skeleton sx={{ m: 2 }} height={20} width={75} variant=\"text\" />\n                           <Box justifyContent=\"flex-start\" flexWrap={\"wrap\"} p={1.2}>\n                              {Array.from({ length: 15 }).map((_, x) =>\n                                 <Chip\n                                    key={`libs-${x}`}\n                                    variant=\"outlined\"\n                                    avatar={<Skeleton variant=\"circular\" width={20} height={20} />}\n                                    label={<Skeleton height={15} width={75} variant=\"text\" />}\n                                    size=\"small\"\n                                    sx={{ mr: 1, mb: 1 }}\n                                 />\n                              )}\n                           </Box>\n                        </Grid>\n                     </Grid>\n                  </CardPanel>\n               </Grid>\n               <Grid item xs={12} lg={6}>\n                  <CardPanel fill={false} sx={{ mb: 2, pb: 2, pl: 2 }}>\n                     <List\n                        dense\n                        subheader={<ListSubheader><Skeleton height={15} width={75} variant=\"text\" /></ListSubheader>}>\n                        {Array.from({ length: 2 }).map((_, x) => (\n                           <StyledListItem\n                              key={`languages-${x}`}\n                              icon={<Skeleton variant=\"rectangular\" width={40} height={40} />}\n                              primary={<Skeleton width={100} variant=\"text\" />}\n                              actions={<Skeleton width={150} variant=\"text\" />}\n                           />\n                        ))\n                        }\n                     </List>\n                  </CardPanel >\n               </Grid>\n\n               <Grid item xs={12} lg={6}>\n\n               </Grid>\n            </Grid>\n         </Grid >\n      </Container >\n   )\n}\n\nexport default PageSkeleton;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { ArrowBackIcon } from '../../components/Icons';\nimport { Container } from '../../components';\n\nconst NotFound = ({params}) => {\n    const navigate = useNavigate();\n\n    return (\n        <Container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            minHeight=\"calc(100vh - 74px)\"\n        >\n            <Grid item xs={10} lg={4} p={4} boxShadow={4} bgcolor=\"background.paper\">\n                <Grid container spacing={1}>\n                    <Box p={1} display=\"flex\">\n                        <Avatar sx={{ ml: 1, mr: 3, mt: 1 }}>\n                            <IconButton color='secondary' onClick={() => navigate('/home')}>\n                                <ArrowBackIcon />\n                            </IconButton>\n                        </Avatar>\n                        <div>\n                            <Typography variant='subtitle1'>{params.nick}</Typography>\n                            <Typography variant='subtitle2'>Não foi localizado</Typography>\n                        </div>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n\n    )\n};\n\nexport default NotFound;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useSocket } from 'socket.io-hook';\nimport { Container } from '../../components';\nimport Perfil from './perfil';\nimport Skills from './skills';\nimport Jobs from './jobs';\nimport Grid from '@mui/material/Grid';\nimport Education from './Education';\nimport Language from './language';\nimport Skeleton from './skeleton';\nimport NotFound from './notfound';\n\nconst PageCandidate = () => {\n    const user = useSelector(state => state.user);\n    const candidate = useSelector(state => state.candidate);\n    const candidates = useSelector(state => state.candidates);\n\n    const isMyCandidate = React.useMemo(() => {\n        return candidates.findIndex(e => e.uuid === candidate.uuid) !== -1;\n\n    }, [candidate, candidates])\n\n    const socket = useSocket();\n    const params = useParams();\n\n    React.useEffect(() => {\n        socket.emit('subscribe', params.nick);\n\n        return () => {\n            socket.emit('unsubscribe', params.nick);\n        }\n    }, [socket, params.nick, user]);\n\n\n    if (!candidate?.nick && !candidate?.notFound) {\n        return <Skeleton />\n    }\n\n    if (candidate?.notFound) {\n        return <NotFound params={params} />\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>{params.nick}</title>\n            </Helmet>\n            <Container spacing={1} p={1} alignContent=\"flex-start\">\n                <Grid item xs={12} sm={4} lg={3}>\n                    <Perfil candidate={candidate} permission={isMyCandidate} />\n                </Grid>\n                <Grid item xs={12} sm={8} lg={9}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} lg={12} >\n                            <Skills candidate={candidate} permission={isMyCandidate} user={user} />\n                        </Grid>\n                        <Grid item xs={12} lg={6} sx={{height: '100%'}}>\n                            <Language candidate={candidate} permission={isMyCandidate} user={user} />\n                            <Education candidate={candidate} permission={isMyCandidate} user={user} />\n                        </Grid>\n                        <Grid item xs={12} lg={6} m={0}>\n                            <div className='pagebreak'></div>\n                            <Jobs candidate={candidate} permission={isMyCandidate} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default PageCandidate;\n","// import { Request } from \"./Request\";\nimport Request from \"fx-request/lib/functions/HttpRequest\";\nimport SerializeQueryString from \"fx-request/lib/functions/SerializeQueryString\";\n\n/**\n * @typedef {import(\"@types/web/models\").Candidate } Candidate\n * @typedef {import(\"@types/web/models\").Job } Job\n * @typedef {import(\"@types/web/models\").Education } Education\n * @typedef {import(\"@types/web/models\").Skill } Skill\n * @typedef {import(\"@types/web/models\").Language } Language\n */\n\nconst Candidate = {\n    /**\n     * @param {Partial<Candidate>} data \n     */\n    search: (data) => Request('get', '/api/candidate?' + SerializeQueryString(data)),\n    get: () => Request('get', '/api/candidates'),\n    /**\n     * @param {RequiredKeys<Candidate>} data \n     */\n    create: (data) => Request('post', '/api/candidates', data),\n    /**\n    * @param {RequiredKeys<Candidate>} data \n    */\n    delete: (data) => Request('delete', '/api/candidates/' + data.uuid),\n    /**\n     * @param {string} uuid\n     * @param {RequiredKeys<Candidate>} data \n     */\n    update: (uuid, data) => Request('put', `/api/candidates/${uuid}`, data),\n    /** \n     * @param {Partial<Skill>} lib\n     */\n    libs: (lib) => ({\n        connect: (/**@type {string}*/ tag) => Request('post', `/api/skills/${encodeURIComponent(tag)}`, lib),\n        disconnect: () => Request('delete', `/api/skills/${encodeURIComponent(lib.tag)}`),\n    }),\n    /**\n     * @param {Partial<Job>} job\n     */\n    jobs: (job = {}) => ({\n        /**\n         * @param {RequiredKeys<Job>} data \n         */\n        create: (data) => Request('post', `/api/jobs/`, data),\n        /**\n         * @param {Partial<Job>} data \n         */\n        update: (data) => Request('put', `/api/jobs/${job.uuid}`, data),\n        delete: () => Request('delete', `/api/jobs/${job.uuid}`),\n        /** \n         * @param {Partial<Skill>} skill\n         */\n        skills: (skill) => ({\n            delete: () => Request('delete', `/api/skills/${encodeURIComponent(skill.tag)}`, { company: job.uuid }),\n            connect: (connect) => Request(connect ? 'post' : 'delete', `/api/skills`, { ...skill, company: job.uuid }),\n        })\n    }),\n    /**\n     * @param {Partial<Education>} education\n     */\n    educations: (education = {}) => ({\n        /**\n         * @param {RequiredKeys<Education>} data \n         */\n        create: (data) => Request('post', `/api/educations/`, data),\n        /**\n         * @param {Partial<Education>} data \n         */\n        update: (data) => Request('put', `/api/educations/${education.uuid}`, data),\n        delete: () => Request('delete', `/api/educations/${education.uuid}`),\n    }),\n    /**\n     * @param {Partial<Language>} language\n     */\n    languages: (language = {}) => ({\n        /**\n         * @param {RequiredKeys<Language>} data \n         */\n        create: (data) => Request('post', `/api/languages/`, data),\n        /**\n         * @param {Partial<Language>} data \n         */\n        update: (data) => Request('put', `/api/languages/${language.uuid}`, data),\n        delete: () => Request('delete', `/api/languages/${language.uuid}`),\n    })\n}\n\nexport default Candidate;"],"names":["Container","props","theme","useTheme","minHeight","React","toolbar","mixins","spacing","Number","window","innerHeight","parseInt","container","alignContent","justifyContent","width","height","boxSizing","md","variant","button","actionArea","children","padding","fill","sx","Card","className","p","display","CardActionArea","CardHeader","fontSize","title","CircularProgressWithLabel","Box","placeContent","position","CircularProgress","value","size","top","left","bottom","right","alignItems","textAlign","Typography","component","color","show","candidate","permission","navigate","useNavigate","print","useMediaQuery","update","input","Prompt","type","then","data","Candidate","uuid","res","status","name","nick","setTimeout","Alert","catch","console","log","deleteCandidate","Confirm","candidateLinks","links","Object","keys","map","e","icon","url","host","URL","pathname","error","mb","pl","m","overflow","backgroundImage","backgroundSize","backgroundRepeat","IconButton","disabled","onClick","label","Avatar","alt","src","image","fontWeight","Tooltip","Delete","List","dense","ListSubheader","mt","StyledListItem","CardMembership","initialValue","primary","AccountCircle","secondary","birthday","CalendarMonth","Format","toDate","DiffYears","Date","Round","Email","email","addressLine","Place","length","link","open","actions","AddCircle","about","multiline","rows","whiteSpace","get","q","Request","skill","encodeURIComponent","tag","question","skilluuid","create","libs","filter","lib","replace","toLocaleLowerCase","libuuid","calcDate","date1","date2","past_date","current_date","diff","Math","floor","getTime","days","ceil","months","years","user","tags","setTags","setTag","Has","x","liblist","setLiblist","Skill","skills","sk","jobs","job","points","begin","finish","values","sort","a","b","handleUpdateSkill","handleConnectSkill","response","newLibList","localeCompare","inputProps","list","autoComplete","connect","finally","getChipProps","onDelete","disconnect","titleTypographyProps","pr","id","Grid","item","xs","activationDistance","flexWrap","cursor","flexDirection","opacity","userSelect","Percent","placement","noWrap","letterSpacing","align","super","textDecoration","paragraph","some","Chip","avatar","mr","style","marginLeft","AutocompleteAsynchronous","Service","OnSet","OptionLabel","allowCreate","clearOnSet","placeholder","disableUnderline","undefined","options","setOptions","loading","setLoading","defaultValue","inputValue","setInputValue","debouncedValue","useDebounce","autocompleteProps","Autocomplete","fullWidth","autoHighlight","freeSolo","isOptionEqualToValue","option","getOptionLabel","typography","caption","onChange","_","onInputChange","currentTarget","renderOption","selected","ListItem","ListItemText","primaryTypographyProps","secondaryTypographyProps","isNew","filterOptions","defopts","params","isExisting","Search","unshift","renderInput","TextField","onFocus","target","select","InputProps","endAdornment","action","float","OppositeComponent","Children","Actions","primaryText","secondaryText","first","collapsed","collapse","setCollapse","Timeline","TimelineItem","TimelineOppositeContent","flex","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","disablePadding","borderRadius","ml","i","Collapse","in","includes","inputs","occupation","company","optional","description","site","handleUpdateJob","handleDeleteJob","delete","Business","y","ListItemSecondaryAction","Edit","Link","href","underline","gutterBottom","pt","hidden","AutocompleteAsync","course","institution","handleCreateEducation","handleUpdateEducation","education","handleDeleteEducation","School","educations","level","handleCreateLanguages","handleUpdateLanguages","language","getStarRate","rate","handleDeleteLanguages","pb","subheader","languages","ListItemIcon","lv","RadioButtonChecked","RadioButtonUnchecked","sm","lg","Skeleton","Array","from","boxShadow","bgcolor","ArrowBack","useSelector","state","candidates","isMyCandidate","findIndex","socket","useSocket","useParams","emit","notFound","Helmet","search","SerializeQueryString"],"sourceRoot":""}